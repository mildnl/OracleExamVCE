-- MySQL dump 10.13  Distrib 5.6.24, for Win32 (x86)
--
-- Host: localhost    Database: lmildner_JavaCertificates
-- ------------------------------------------------------
-- Server version	5.6.24

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `again`
--

DROP TABLE IF EXISTS `again`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `again` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cheatedOrAgain` char(1) DEFAULT NULL,
  `session_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `session_id` (`session_id`),
  KEY `question_id` (`question_id`),
  CONSTRAINT `again_ibfk_1` FOREIGN KEY (`session_id`) REFERENCES `session` (`id`),
  CONSTRAINT `again_ibfk_2` FOREIGN KEY (`question_id`) REFERENCES `question` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `again`
--

LOCK TABLES `again` WRITE;
/*!40000 ALTER TABLE `again` DISABLE KEYS */;
INSERT INTO `again` VALUES (1,'c',3,3),(2,'c',16,7),(3,'a',16,10),(4,'a',17,5),(5,'c',17,6),(6,'a',17,5),(7,'c',17,6);
/*!40000 ALTER TABLE `again` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `answer`
--

DROP TABLE IF EXISTS `answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` varchar(1024) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `isRight` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`),
  CONSTRAINT `answer_ibfk_1` FOREIGN KEY (`question_id`) REFERENCES `question` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1351 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answer`
--

LOCK TABLES `answer` WRITE;
/*!40000 ALTER TABLE `answer` DISABLE KEYS */;
INSERT INTO `answer` VALUES (1,'int sum ( int first, int second ) { first + second; }',7,0),(2,'int sum ( int first, second ) { return first + second; }',7,0),(3,'sum ( int first, int second ) { return first + second; }',7,0),(4,'int sum ( int first, int second ) { return first + second; }',7,1),(5,'void sum ( int first, int second ) { return first + second; } ',7,0),(6,'SecurityException ',8,0),(7,'DuplicatePathException',8,0),(8,'IllegalArgumentException',8,0),(9,'TooManyArgumentsException',8,0),(10,'Adding the public modifier to the declaraion of method1 at line n1',9,0),(11,'Removing the public modifier from the defintion of method1 at line n2',9,0),(12,'Changing the private modifier on the declaration of method2 to public at line n3',9,1),(13,'Changing the line n4 to DoClass doi = new DoClass();',9,1),(14,'true true',10,0),(15,'true false',10,0),(16,'false true',10,1),(17,'false false',10,0),(18,'compilation fails',10,0),(19,' Replacing <code1> with index > 0 and replacing <code2> with index--; ',11,1),(20,'Replacing <code1> with index > 0 and replacing <code2> with --index; ',11,1),(21,'Replacing <code1> with index > 5 and replacing <code2> with --index; ',11,0),(22,' Replacing <code1> with index and replacing <code2> with --index; ',11,0),(23,'X only',6,0),(24,'Y only',6,0),(25,'Z only',6,0),(26,'X and Y',6,1),(27,'Y and Z',6,0),(28,'X and Z',6,0),(29,'X, Y and Z',6,0),(30,'Found 3 at 2 ',13,0),(31,'Found 3 at 3',13,0),(32,'compilation fails ',13,1),(33,'An exception is thrown at runtime ',13,0),(34,'Happy Journey! Duke',14,1),(35,'Happy Journey! Java',14,0),(36,'An exception is thrown at runtime',14,0),(37,'The program fails to execute due to a runtime error',14,0),(38,'for (int i = 0; i < arra.length; i++) {\n  for (int j = 0; j < arra[i].length; j++) {\n    arra[i][j] = arra[i][j].toUpperCase();\n  }\n}',15,1),(39,'for (inti=0;i<3;i++){\n  for (int j =0; j < 4; j++) {\n    arra[i][j] = arra[i][j].toUpperCase();\n  }\n}',15,0),(40,'for (String a[] : arra[][]) {\n  for (String x : a[]) {\n    toUpperCase();\n  }\n}',15,0),(41,'for (int i : arra.length) {\n  for (String x : arra) {\n    arra[i].toUpperCase();\n  }\n}',15,0),(42,'int a, b, c = 0;',16,1),(43,'int a, b, c;',16,0),(44,'int g, int h, int i = 0;',16,0),(45,'int d, e, F;',16,1),(46,'Int k, l, m = 0;',16,0),(47,'8',17,0),(48,'9',17,1),(49,'11',17,0),(50,'10',17,0),(51,'compilation falis ',17,0),(52,'Only the default constructor of class X',19,1),(53,'Only the no-argument constructor of class Y',19,0),(54,'Only the no-argument constructor of class Z',19,0),(55,'Only the default constructor of object class',19,0),(56,'message = Hi everyone!',20,0),(57,'message = Hi XvXryonX!',20,1),(58,'A compile time error is produced. ',20,0),(59,'A runtime error is produced. ',20,0),(60,' message = ',20,0),(61,'message = Hi Xveryone! ',20,0),(62,'A.  x = 4, y = 3, z = 2',21,0),(63,'B. x = 3, y = 2, z = 3',21,0),(64,'C. x = 2, y = 3, z = 3',21,0),(65,'D. x = 4, y = 2, z = 3',21,0),(66,'E. x = 2, y = 3, z = 4',21,1),(67,'It is implemented as an array of the specified element type. ',22,1),(68,'Using a row by colum convetion, each row of a two-dimensional array must be of the same size. ',22,0),(69,'At declaration time, the number of elements of the array in each dimension must be specified. ',22,0),(70,'All methods of the class Object my be invoked on the two-dimensional array ',22,1),(71,'class Cc extends Bb { } ',23,1),(72,'class Cc extends Ww { }',23,0),(73,'class Cc extends Ee { }',23,0),(74,'class Cc extends Dd { } ',23,1),(75,'inti=0;\nfor (String[] sub : arr) {\n  int j = sub.length-1;\n  for (String str : sub) {\n    System.out.println(str[j]);\n    i++ \n  }\n}',24,0),(76,'for (int i = 0; i < arr.length; i++) {\n  int j = arr[i].length-1;\n  System.out.print(arr[i][j]);\n}',24,1),(77,'for (String[] sub : arr[][]) {\n  int j = sub.length;\n  System.out.print(arr[i][j]);\n  i++;\n}',24,0),(78,'for (int i = 0; i < arr.length-1; i++) {\n  int j = arr[i].length-1;\n  System.out.print(arr[i][j]);\n  i++;\n}',24,0),(79,'Allow a class implementation to change without canging the clients. ',25,1),(80,'Protects confidential date from leaking out of the objects',25,1),(81,'Prevents code from causing exceptions. ',25,0),(82,'Enables the class implementation to protect its invariants. ',25,1),(83,' Permits classes to be combined into the same package. ',25,0),(84,' Enables multiple instances of the same class to be created safely. ',25,0),(85,'A. StringBuilder sb = new String(\"128\");',26,0),(86,'B. StringBuilder sb = StringBuilder.setCapacity(128);',26,0),(87,'C. StringBuilder sb = = StringBuilder.getInstance(128);',26,0),(88,'D. StringBuilder sb = new StringBuilder(128);',26,1),(89,' Cannot be modified.',27,0),(90,'Can be read but not written from outside the class. ',27,0),(91,' Can be read and written from this class and its subclasses only within the same package.',27,0),(92,'Can be read and written from this class and its subclasses defined in any package. ',27,1),(93,'0\n1',29,0),(94,'0\n1\n2',29,1),(95,'0\n1\n2\n3',29,0),(96,'Compilation fails.',29,0),(97,'Two',30,0),(98,'Three',30,0),(99,'Four',30,1),(100,'six',30,0),(101,'c=null\nb = false \nf = 0.0F',31,0),(102,'c=0\nb = false \nf = 0.0f',31,0),(103,'c=null\nb = true \nf = 0.0',31,0),(104,'c=\nb = false \nf = 0.0',31,1),(105,'Initialized Started ',32,0),(106,'Initialized Started Initialized',32,0),(107,'Compilation fails',32,1),(108,'An exception is thrown at runtime ',32,0),(109,'a e\nThe length is :2 ',33,0),(110,'a e\ni o\nThe length is :4 ',33,0),(111,'aeio \nThe length is :4 ',33,0),(112,'a   e\ni    o \nThe length is :7 ',33,1),(113,'Compilation fails ',33,0),(114,'Compilation fails.',34,1),(115,'The third argument is given the value null.',34,0),(116,'The third argument is given the value void.',34,0),(117,'The third argument is given the value zero.',34,0),(118,'The third argument is given the appropriate false value for its declared type.',34,0),(119,'An exception occurs when the method attemps to access the third argument.',34,0),(120,'1',35,1),(121,'2',35,0),(122,'4',35,0),(123,'0',35,0),(124,'class fred1 {public static void main(String args) {System.out.println(args[1]);\n}\n}',28,0),(125,'class fred1 {\npublic static void main(String[ ] args) {\nSystem.out.println(args[2]); \n}\n} ',28,0),(126,'class fred1 {public static void main(String[ ] args) {System.out.println(args);\n}\n}',28,1),(127,'class fred1 {public static void main(String[ ] args) {System.out.println(args[1]);\n}\n} ',28,1),(128,'XXX',36,0),(129,'XYX',36,0),(130,'YYX',36,0),(131,'YYY',36,1),(132,' Successfu',37,0),(133,'Unsuccessful',37,1),(134,'compilation fails',37,0),(135,'An exception is thrown at runtime',37,0),(136,'14',38,0),(137,'15',38,0),(138,'24',38,0),(139,'25',38,0),(140,'34',38,0),(141,'35',38,1),(142,'shape1 = (Square) new Square(); ',39,1),(143,'shape1  = new Square(); ',39,1),(144,'square1  = (Square) new Square();',39,1),(145,'square1  = new Shape(); ',39,0),(146,'square1  = new Square(); \nshape1  = square1;',39,1),(147,'shape1  = new Shape();\nsquare1  = shape1; ',39,0),(148,'Adding a break statement after each print statement',40,0),(149,'Adding a default section within the switch code-block',40,0),(150,'Changing the String literals in each case label to integer',40,1),(151,'Changing the type of the variable day to String',40,1),(152,'Arranging the case label in ascending order',40,0),(153,'It compiles withour error. ',41,1),(154,'It does not compile because an abstract class cannot have private methods. ',41,0),(155,'It does not compile because an abstract class cannot have instance variables. ',41,0),(156,'It does not compile because an abstract class must have at least one abstract method. ',41,0),(157,'It does not compile because an abstract class must have a constructor with no arguments ',41,0),(158,'The fox jump lazy ...',42,0),(159,'The fox lazy ...',42,1),(160,'Quick fox over lazy ...',42,0),(161,'Quick fox the ...',42,0),(162,'square... ',43,0),(163,'... ',43,0),(164,'compilation fails',43,1),(165,'An exception is thrown at runtime ',43,0),(166,'Unix Linux Solaris',44,0),(167,'null Unix Linux Solaris',44,1),(168,'class java.lang.Exception',44,0),(169,'class java.lang.NullPointerException',44,0),(170,'ns=50s=125ns = 125 s = 125ns = 100 s = 125 ',45,0),(171,'ns=50s=125ns = 125 s = 125ns = 0 s = 125',45,1),(172,'ns=50s=50ns = 125 s = 125ns = 100 s = 100',45,0),(173,'ns=50s=50ns = 125 s = 125ns = 0 s = 125 ',45,0),(174,'2 4 6 8 10 12',46,0),(175,'2 4 6 8 10 12 14',46,0),(176,'compilation fails',46,0),(177,'The program prints multiple of 2 infinite times',46,0),(178,'The program prints nothing',46,1),(179,'Object',47,1),(180,'Class',47,0),(181,'An anonymous class ',47,0),(182,'Objects',47,0),(183,'6',48,0),(184,'4',48,1),(185,'5',48,0),(186,'3',48,0),(187,'2',48,0),(188,'compilation fails',48,0),(189,'This is not the only valid loop construct; there exists another form of for loop constructor. ',12,1),(190,'The expression expr1 is optional. It initializes the loop and is evaluated once, as the lopp begin. ',12,1),(191,'When expr2 evaluates to false, the loop terminates. It is evaluated only after each iteration through the loop.',12,0),(192,'The expression expr3 must be present. It is evaulated after each ietration through the loop. ',12,0),(193,'[green, red, yellow, cyan]',49,1),(194,'[green, blue, yellow, cyan]',49,0),(195,'[green, red, cyan, yellow]',49,0),(196,'An IndexOutOfBoundsException is thrwon at runtime',49,0),(197,'compilation fails ',50,0),(198,'Result = 5 ',50,0),(199,'Result = 6 ',50,0),(200,'Result = 10 ',50,1),(201,' Result = 11',50,0),(202,'13480.0',51,1),(203,'13480.02',51,0),(204,'compilation fails',51,0),(205,'An exception is thrown at runtime',51,0),(206,'Result = 2',52,0),(207,'Result = 3',52,0),(208,'Result = 28',52,0),(209,'Result = 29',52,0),(210,'Result = 30',52,1),(211,'Improves the programm structure because the error handling code is separated from the normal\nprogram function.',53,0),(212,'Provides a set of standard exceptions that covers all possible errors',53,0),(213,'Improves the program structure because the programmer can choose where to handle exceptions',53,0),(214,'Improves the program structure because exceptions must be handled in the method in which they\noccured',53,0),(215,'allows the creation of new exceptions that are tailored to the particular program',53,0),(216,'Class C extends A implements X {}',54,1),(217,'Class C implements Y extends B {}',54,0),(218,'Class C extends A, B {}',54,0),(219,'Class C implements X, Y extends B { }',54,0),(220,'Class C extends B implements X, Y {} ',54,1),(221,'Equal \nNot equal ',56,0),(222,'Not equal \nEqual ',56,0),(223,'Equal \nEqual',56,0),(224,'null',57,0),(225,'Not equal \nNot equal ',56,1),(226,'compilation fails',57,0),(227,'java.lang.NullPointerException',57,1),(228,'0',57,0),(229,'7',55,0),(230,'12',55,0),(231,'19',55,1),(232,'Compilation fails',55,0),(233,'An exception is thrown at runtime',55,0),(234,'String str2 = str1;',58,1),(235,'String str2 = new String(str1);',58,0),(236,'String str2 = sb1.toString();',58,0),(237,'String str2 = \"Duke\";',58,0),(238,'Put the throw new Exception() statement in the try block of try catch',59,1),(239,'Put the doSomethingElse() method in the try block of a try catch',59,0),(240,'Put the doSomething() method in the try block of a try catch',59,0),(241,'Put the doSomething() method and the doSomethingElse() method in the try block of a try catch',59,0),(242,'Cricket() {\n  super(11, \"Cricket\", \"Condition OK\");\n  num_umpires = 3;num_substitues = 2;\n}',60,1),(243,'Cricket() {\n  super.ground_condition = \"Condition OK\";\n  super.name = \"Cricket\";\n  super.num_players = 11;\n  num_umpires = 3;\n  num_substitues = 2;\n}',60,0),(244,'Cricket() {\n  this(3, 2);\n  super(11, \"Cricket\", \"Condition OK\");\n}\nCricket(int nu, ns) {\n  this.num_umpires = nu;\n  this.num_substitues = ns;\n}',60,0),(245,'Cricket() {\n  this.num_umpires = 3;\n  this.num_substitues = 2;\n  super(11, \"Cricket\", \"Condition OK\");\n}',60,0),(246,'moth ',61,0),(247,'er ',61,0),(248,'mother ',61,1),(249,'compilation fails ',61,0),(250,'An exception is thrown at runtime ',61,0),(251,'Java\nJava\nJava',18,0),(252,'Java\nJeve\nv',18,0),(253,'Java \nJeve \nva',18,1),(254,'Compilation fails',18,0),(255,'Bob\'s Name: Bob',2,0),(256,'Bob\'s Name: Jian',2,1),(257,'Nothing prints',2,0),(258,'Bob\'s name',2,0),(259,'line x1',62,0),(260,'line x2',62,1),(261,'line x3',62,0),(262,'line x4',62,0),(263,' An abstract class can implement an interface. ',63,1),(264,'An abstract class can be extended by an interface. ',63,0),(265,'An interface CANNOT be extended by another interface. ',63,0),(266,'An interface can be extended by an abstract class. ',63,0),(267,'An abstract class can be extended by a concrete class. ',63,0),(268,'An abstract class CANNOT be extended by an abstract class. ',63,1),(269,'Add the public modifier to the declaration of class X ',64,0),(270,'Remove the private modifier from the X() constructor',64,1),(271,'Add the protected modifier to the declaration of the one() method ',64,0),(272,'Remove the Y() constructor',64,0),(273,'Remove the private modifier from Y() constructor ',64,0),(274,'One',65,0),(275,'Two',65,0),(276,'Three',65,1),(277,'Compilation fails',65,0),(278,'t.fvar = 200;',66,0),(279,'cvar = 400;',66,0),(280,'fvar = 200;\ncvar = 400;',66,0),(281,'fvar = 200;\ncvar = 400;',66,0),(282,'t.fvar = 200;\nTest2.cvar = 400;',66,1),(283,'this.fvar = 200;\nTest2.cvar = 400; ',66,0),(284,'3456',67,0),(285,'3436',67,0),(286,'5456',67,0),(287,'3646',67,0),(288,'10 8 6 4 2 0',68,1),(289,'10 8 6 4 2',68,0),(290,'An ArithmeticException is thrown at runtime',68,0),(291,'The program goes into an infinite outputting: 10 8 6 4 2 0..',68,0),(292,'It can take arguments.',69,0),(293,'It has private access modifier in its declaration.',69,0),(294,'It can be overloaded.',69,1),(295,'The default constructor of a subclasss always invoke the no-argument \nconstructor if its superclass.',69,0),(296,'public int[] subArray(int[] src, int start, int end) {\n  return src;\n}',70,1),(297,'public int subArray(int src, int start, int end) {\n  return src;\n}',70,0),(298,'public int[] subArray(int src, int start, int end) {\n  return src;\n}',70,0),(299,'public int subArray(int[] src, int start, int end) {\n  return src;\n}',70,0),(300,'100 200 : 100 200 :',71,1),(301,'1000 :1000 :',71,0),(302,'100200 :1000 :',71,0),(303,'1000 :100200 :',71,0),(304,'p1.Test.class \n0.0',72,0),(305,'<the summary address referenced by ref>\n0.000000',72,0),(306,'null\n0.0',72,1),(307,'compilation fails',72,0),(308,'A NullPointerException is thrown at runtime',72,0),(309,'Replacing line 5 with public static void main(String[] args) throws MissingInfoException, \nAgeOutofRangeException {',73,0),(310,'Replacing line 5 with public static void main(String[] args) throws Exception {',73,0),(311,'Enclosing line 6 and line 7 within a try block and adding:\ncatch(MissingInfoException e1) { //code goes here }\ncatch(Exception e2) { //code goes here }\ncatch(AgeOutofRangeException e3) { //code goes here }',73,0),(312,'Enclosing line 6 and line 7 within a try block and adding: \ncatch(Exception e2) { //code goes here }\ncatch(AgeOutofRangeException e3) { //code goes here } ',73,0),(313,'Prints 1 2 3 4 5 once',74,0),(314,'Prints 1 3 5 once',74,0),(315,'Prints 1 2 3 4 5 five times',74,0),(316,'Prints 1 2 3 4 5 six times',74,0),(317,'compilation fails',74,0),(318,'Hello Java! 8\nHello Java! 6\nHello Java! 4',75,0),(319,'Hello Java! 8\nHello Java! 6',75,0),(320,'Hello Java! 8',75,0),(321,'compilation fails',75,0),(322,'line 21',76,0),(323,'line 22',76,1),(324,'line 23',76,0),(325,'line 24',76,0),(326,'line 25',76,0),(327,'0\nDone ',77,0),(328,'First exception\nDone',77,0),(329,'Second exception',77,0),(330,'Done\nThird exception ',77,0),(331,'Third exception ',77,0),(332,'Base 30',78,0),(333,'Overridden 20',78,1),(334,'Overridden 20\nBase 30',78,0),(335,'Base 30\nOverridden 20',78,0),(336,'DBConfiguration f;\nreturn f;',79,0),(337,'return DBConfiguration;',79,0),(338,'return new DBConfiguration();',79,1),(339,'return 0; ',79,0),(340,'Red 0\nOrange 0\nGreen 3 ',80,0),(341,'Red 0\nOrange 0\nGreen 6',80,0),(342,'Red 0\nOrange 1\nGreen 4',80,0),(343,'Compilation fails ',80,1),(344,'AssertionError, ArrayIndexOutOfBoundsException, ArithmeticException',81,0),(345,'AssertionError, IOError, IOException',81,0),(346,'ArithmeticException, FileNotFoundException, NumberFormatException',81,0),(347,'FileNotFoundException, IOException, SQLException',81,0),(348,'ArrayIndexOutOfBoundsException, IllegalArgumentException, FileNotFoundException',81,0),(349,'Found Red\nFound Default',82,0),(350,'Found Teal',82,0),(351,'Found Red\nFound Blue\nFound Teal',82,0),(352,'Found Red\nFound Blue\nFound Teal\nFound Default',82,0),(353,'Found Default ',82,1),(354,'Valid',3,0),(355,'Not valid',3,0),(356,'Compilations fails',3,1),(357,'An IllegalArgumentException is thrown at run time',3,0),(358,'boolean h = 1;',83,0),(359,'boolean k = 0;',83,0),(360,'boolean m = null;',83,0),(361,'boolean j = (1 < 5);',83,1),(362,'Good Day!\nGood Luck!',84,1),(363,'Good Day!\nGood Day!',84,0),(364,'Good Luck!\nGood Day!',84,0),(365,'Good Luck!\nGood Luck!',84,0),(366,'Compilation fails',84,0),(367,'Total match found: 1 ',85,0),(368,'Total match found: 2',85,1),(369,'Total match found: 3 ',85,0),(370,'Total match found: 5 ',85,0),(371,'11,11',86,1),(372,' 10,10',86,0),(373,'21,11',86,0),(374,'20,20',86,0),(375,'11,12',86,0),(376,'A static field cannot be private.',87,0),(377,'The getLetter method has no body.',87,1),(378,'There is no setLetter method.',87,0),(379,'The letter field is uninitialized.',87,0),(380,'It contains a method named Main instead of main.',87,0),(381,'One',88,0),(382,'Two',88,0),(383,'Three',88,0),(384,'Compilation fails',88,1),(385,'6 5 6 4',4,1),(386,'6 5 5 4',4,0),(387,'6 5 6 6',4,0),(388,'6 5 6 5',4,0),(389,'default 17 \nhello 92 ',89,0),(390,'hello 92 \ndefault 17 ',89,0),(391,'hello 17 \ndefault 92 ',89,1),(392,'default 92 \nhello 17 ',89,0),(393,'Ym\nXm2 ',90,1),(394,'Ym\nXm1',90,0),(395,'Compilation fails',90,0),(396,'A ClassCastException is thrown at runtime ',90,0),(397,'Calc c = new Calc();\nint n3 = c.findMid(n1, n2);',91,1),(398,'int n3 = super.findMid(n1, n2)',91,0),(399,'Calc c = new Mid();\nint n3 = c.findMid(n1, n2);',91,0),(400,'Mid m1 = new Calc();\nint n3 = m1.findMid(n1, n2);',91,1),(401,'nt n3 = Calc.findMid(n1, n2);',91,0),(402,'Pet a = new Dog();',93,1),(403,'Pet b = new Pet();',93,0),(404,'Dog f = new Pet();',93,0),(405,'Dog d = new Beagle();',93,1),(406,'Pet e = new Beagle();',93,1),(407,'Beagle c = new Dog();',93,0),(408,'In multicatch blocks, the subclass catch handler must be caught after the superclass catch handler. ',94,0),(409,'A try block must followed by either a catch or finally block.',94,0),(410,'The Exception class is the superclass of all errors and exceptions in the java language.',94,0),(411,'A single catch block can handle more than one type of exception. ',94,0),(412,'A checked exception must be caught explicitly.',94,0),(413,'In a catch block that can handle more than one exception, the subclass exception handler must be \ncaught before the superclass exception handler. ',94,0),(414,'Change the access modifier of setRadius() method to private',95,1),(415,'Change the getArea() method\npublic double getArea() { return area; }',95,1),(416,'When the radius is set in the Circle constructor and setRadius() method, recompute the area and\nstore it into the area field.',95,1),(417,'Change the getRadius() method\npublic double getRadius() {\n   area = Math.PI * radius * radius;\n   return radius;\n}',95,0),(418,'class java.lang.String\nclass java.lang.String\nclass java.util.ArrayList',96,0),(419,'class java.lang.Object\nclass java.lang.Object\nclass java.util.Collection',96,0),(420,'lass java.lang.StringBuilder\nclass java.lang.String\nclass java.util.ArrayList',96,1),(421,'class java.lang.StringBuilder\nclass java.lang.String\nclass java.util.Lis',96,0),(422,'An import statement',97,0),(423,'A field declaration',97,1),(424,'A package declaration',97,0),(425,'A method declaration',97,1),(426,'2 4 6 8 ',92,1),(427,'2 4 6 8 9',92,0),(428,'1 3 5 7',92,0),(429,'1 3 5 7 9',92,0),(430,'compilation fails',92,0),(431,'An exception is thrown at runtime ',92,0),(432,'int[][] arr = null;',98,0),(433,'int[][] arr = new int[2];',98,0),(434,'int[][] arr = new int[2][];',98,1),(435,'int[][] arr = new int[][4];',98,0),(436,'int[][] arr = new int[2][0];',98,1),(437,'int[][] arr = new int[0][4];',98,0),(438,'url.indexOf(\"com\") != -1 ',99,1),(439,'url.indexOf(\"com\")',99,0),(440,'url.indexOf(\"com\") == -1 ',99,0),(441,'url.indexOf(\"com\") != false',99,0),(442,'They match\nThey really match',100,0),(443,'They really match',100,1),(444,'They match',100,0),(445,'Nothing is printed to the screen',100,0),(446,'The x field',101,1),(447,'The y field',101,1),(448,'The sum field',101,1),(449,'The computeSum() constructor',101,0),(450,'The setX() method',101,0),(451,'The setY() method',101,0),(452,'Exception',103,0),(453,'Exception but NOT including RuntimeException',103,0),(454,'Throwable',103,0),(455,'RuntimeException',103,0),(456,'CheckedException',103,0),(457,'Error',103,0),(458,'6 7 8',102,1),(459,'7 8 9',102,0),(460,'0 1 2',102,0),(461,'6 8 10',102,0),(462,'Compilation fails ',102,0),(463,'Equal \nNot equal ',105,0),(464,'Not equal \nEqual ',105,0),(465,'Equal \nEqual ',105,1),(466,'Not equal \nNot equal ',105,0),(467,'box',106,0),(468,'nbo',106,0),(469,'bo',106,0),(470,'nb',106,0),(471,'An exception is thrown at runtime',106,1),(472,'At line n1, insert: import facades;\nAt line n2, insert: import facades; import org.domain;',107,0),(473,'At line n1, insert: import facade.*;\nAt line n2, insert: import facades; import org.*;',107,0),(474,'At line n1, insert: import facades.*;\nAt line n2, insert: import facades.Boo; import org.*;',107,0),(475,'At line n1, insert: import facades.Foo, Boo;\nAt line n2, insert: import facades; import org.domain.Woofy;',107,0),(476,'At line n1, insert: import facades.*;\nAt line n2, insert: import facades.*; import org.domain.Woofy;',107,1),(477,'Change line 2 to the following:\nPublic int price;',108,0),(478,'Change line 4 to the following:\nint price = new simple();',108,0),(479,'Change line 4 to the following:\nFloat price = new simple();',108,0),(480,'Change line 5 to the following:\nPrice = 4f;',108,0),(481,'Change line 5 to the following:\nprice.price = 4;',108,1),(482,'Change line 5 to the following:\nPrice = (float) 4;',108,0),(483,'Change line 5 to the following:\nPrice = (Simple) 4;',108,0),(484,'The code compiles and runs properly; no changes are necessary.',108,0),(485,'Invalid Divisor. \nDivisor changed\nSuccessful Division 30',109,0),(486,'Invalid Divisor. \nSuccessful Division 30',109,0),(487,'Invalid Divisor. \nException in thread \"main\" java.lang.ArithmeticException:\n/ by zero at test.Teagle.main(Teagle.java:14)',109,1),(488,'Invalid Divisor. \nException in thread \"main\" java.lang.ArithmeticException: \n/ by zero at test.Teagle.main(Teagle.java:14)\nSuccessful Division 1 ',109,0),(489,'The sum is 2.',110,0),(490,'The sum is 14. ',110,0),(491,'The sum is 15.',110,0),(492,'The loop executes infinite times.',110,0),(493,'Compilation fails ',110,1),(494,'1',111,0),(495,'2',111,0),(496,'null',111,0),(497,'an infinite loop',111,0),(498,'compilation fails',111,1),(499,'compilation fails ',112,1),(500,'Is a prime number. ',112,0),(501,'Is a palindrome.',112,0),(502,'Is a prime number. \nIs a palindrome. ',112,0),(503,'Invalid value. ',112,0),(504,'int[][] array2D = { {0,1,2,4}, {5,6} };',113,1),(505,'int[][] array2D = new int[][2];array2D[0][0] = 1;array2D[0][1] = 2;array2D[1][0] = 3;array2D[1][1] = 4;',113,0),(506,' int[][][] array3D = { {0,1}, {2,3}, {4,5} };',113,0),(507,'int[] array = {0,1};\nint [][][] array3D = new int[2][2][2];\narray3D[0][0] = array;\narray3D[0][1] = array;\narray3D[1][0] = array;\narray3D[1][1] = array;',113,1),(508,'int[][] array2D = {0,1};',113,0),(509,'Super\nSub\nSub',114,1),(510,'Contract\nContract\nSuper',114,0),(511,'Compilation fails at line n1',114,0),(512,'Compilation fails at line n2',114,0),(513,'011',116,0),(514,'012',116,0),(515,'123',116,0),(516,'000',116,0),(517,'omission of the return statement',117,1),(518,'return null;',117,0),(519,'return void;',117,0),(520,'return;',117,1),(521,'Square square = new Square(\"bar\");\nsquare.foo(\"bar\");\nsquare.foo();',118,0),(522,'Square square = new Square(\"bar\");\nsquare.foo(\"bar\");\nsquare.foo(\"bar\");',118,0),(523,'Square square = new Square();\nsquare.foo();\nsquare.foo(bar);',118,0),(524,'Square square = new Square();\nsquare.foo();\nsquare.foo(\"bar\");',118,0),(525,'Square square = new Square();\nsquare.foo();\nsquare.foo();',118,0),(526,'quare square = new Square();\nsquare.foo(\"bar\");\nsquare.foo();',118,1),(527,'Shining Sun\nShining Sun\nShining Sun',119,1),(528,'Shining Sun\nTwinkling Star\nShining Sun',119,0),(529,'Compilation fails',119,0),(530,'A ClassCastException is thrown at runtime',119,0),(531,'The Exception must be caught.',120,0),(532,'The Exception must be declared to be thrown.',120,0),(533,'The Exception must be caught or declared to be thrown.',120,0),(534,'No other code needs to be added',120,0),(535,'log1: false \nlog2: true ',121,1),(536,'log1: true \nlog2: true ',121,0),(537,'log1: false \nlog2: false ',121,0),(538,'log1: true \nlog2: false ',121,0),(539,'100',115,0),(540,'Compilation fails due to an error in line n1',115,0),(541,'Compilation fails due to an error in line n2',115,0),(542,'Compilation fails due to an error in line n3 ',115,1),(543,'reduces memory footprint',122,1),(544,'mplements the Collection API',122,0),(545,'is multi.thread safe',122,0),(546,'dynamically resizes based on the number of elements in the list',122,1),(547,'Compilation fails due to an error on line 1.',123,0),(548,'An exception is thrown at runtime due to error on line 3.',123,0),(549,' An exception is thrown at runtime due to error on line 4.',123,1),(550,'1002',123,0),(551,'private Student(int i, String name, List cs) {\n  /* initialization code goes here */\n}',124,0),(552,'public void Student(int i, String name, List cs) {\n  /* initialization code goes here */\n}',124,0),(553,'Student(int i, String name, List cs) {\n  /* initialization code goes here */\n}',124,1),(554,'Student(int i, String name, ArrayList cs) {\n  /* initialization code goes here */\n}',124,0),(555,'1',125,1),(556,'2',125,0),(557,'3',125,0),(558,'4',125,0),(559,'acting',126,0),(560,'action ',126,1),(561,'compilation fails ',126,0),(562,'An exception is thrown at runtime ',126,0),(563,'int',127,1),(564,'float',127,0),(565,'double',127,0),(566,'Integer',127,1),(567,'String',127,1),(568,'Float',127,0),(569,'int i : array',129,0),(570,'inti=0;i<1;i++',129,0),(571,';;',129,0),(572,';i<1;i++',129,0),(573,'i=0;i<1',129,0),(574,'0 unknown\n0 unknown',130,0),(575,'1200 Strawberry\n1200 Strawberry',130,0),(576,'1200 Strawberry\n1230 Chocolate',130,1),(577,'compilation fails',130,0),(578,'-1',131,0),(579,'1',131,0),(580,'5',131,0),(581,'8',131,0),(582,'11',131,1),(583,'4 \n34 \n234 \n1234 ',132,1),(584,'4 \n43 \n432 \n4321',132,0),(585,'4321 \n432 \n43 \n4 ',132,0),(586,'4567 \n345 \n23 \n1 ',132,0),(587,' blackCowboyHat.setName = \"Cowboy Hat\";',133,0),(588,'setName(\"Cowboy Hat\");',133,0),(589,'Hat.setName(\"Cowboy Hat\");',133,0),(590,'blackCowboyHat.setName(\"Cowboy Hat\");',133,1),(591,'hEllOjAvA!',128,0),(592,'Hello java!',128,0),(593,'Out of limitshellojAvA!',128,1),(594,'Out of limits ',128,0),(595,'2 2',134,1),(596,'1 2',134,0),(597,'3 2',134,0),(598,'3 3',134,0),(599,'2',136,1),(600,'4 3 1',136,1),(601,' 1 2 3',136,0),(602,'1 3 4',136,0),(603,'20.0 30.33 109.0 310.0 ',137,1),(604,'20.0 30.23 c10 310.0 ',137,0),(605,'compilation fails ',137,0),(606,'An exception is thrown at runtime. ',137,0),(607,'b1.compareTo(b2)',138,0),(608,'i = 1',138,0),(609,'i == 2 ? -1 : 0',138,0),(610,'\"foo\".equals(\"bar\")',138,1),(611,'line n1',104,1),(612,'line n2',104,0),(613,'line n3',104,0),(614,'line n4',104,0),(615,'Yellow \nPink\nRed',139,0),(616,'Cyan\nBlue\nRed',139,0),(617,'Cyan\nGreen\nRed',139,0),(618,'compilation fails',139,0),(619,'Fresco',140,0),(620,'null : Fresco',140,1),(621,'Fresco : Fresco',140,0),(622,'A NullPointerException is thrown at runtime',140,0),(623,'10 : 22 : 20 ',135,0),(624,'10 : 22 : 22 ',135,1),(625,'10 : 22  : 6',135,0),(626,'10 : 30 : 6 ',135,0),(627,'line n1 ',141,0),(628,'line n2',141,0),(629,'line n3',141,0),(630,'line n4',141,1),(631,'public class Test implements SampleCloseable{\n    public void close() throws java.io.IOException{\n        // do something\n    }    \n}',142,1),(632,'public class Test\n implements SampleCloseable{\n    public void close() throws Exception{\n        // do something\n    }    \n}',142,0),(633,'public class Test\n implements SampleCloseable{\n    public void close() throws java.io.FileNotFoundException{\n        // do something\n    }    \n}',142,1),(634,'public class Test\n extends SampleCloseable{\n    public void close() throws java.io.IOException{\n        // do something\n    }    \n}',142,0),(635,'public class Test\n implements SampleCloseable{\n    public void close(){\n        // do something\n    }    \n}',142,1),(636,'These are exceptional conditions that a well-written application should \nanticipate and recover from.',143,1),(637,'These are exceptional conditions that are external to the application, \nand that the application usually cannot anticipate and recover from.',143,0),(638,'These are exceptional conditions that are internal to the application, \nand that the application usually cannot anticipate and recover from.',143,0),(639,'Every class that is a subclass of RuntimeException and Error is \ncategorized as checked exception.',143,0),(640,'Every class that is a subclass of Exception, excluding RuntimeException \nand its subclasses, is categorized as checked exception.',143,1),(641,'Square square = new Square(\"bar\");\nsquare.foo(\"bar\");\nsquare.foo();',144,0),(642,'Square square = new Square(\"bar\");\nsquare.foo(\"bar\");\nsquare.foo(\"bar\");',144,0),(643,'Square square = new Square();\nsquare.foo();\nsquare.foo(bar);',144,0),(644,'Square square = new Square();\nsquare.foo();\nsquare.foo(\"bar\");',144,0),(645,'Square square = new Square();\nsquare.foo();\nsquare.foo();',144,0),(646,'Square square = new Square();\nsquare.foo(\"bar\");\nsquare.foo();',144,1),(647,'20',145,0),(648,'25',145,0),(649,'29',145,0),(650,'Compilation fails ',145,1),(651,'An ArrayIndexOutOfBoundException is thrown at runtime ',145,0),(652,' ii = 0\nii = 2',146,1),(653,' ii = 0\n ii = 0 ii = 1 ii = 2 ii = 3\n',146,0),(654,'ii =',146,0),(655,'Compilation fails',146,0),(656,'1 3 ',147,0),(657,'2 4 ',147,0),(658,'The program prints nothing. ',147,0),(659,'Prints 1 infinite times. ',147,1),(660,'Prints 1 once and the loop executes infinite times ',147,0),(661,'private int num; public int getNum() { return num; } public void setNum(int num) { this.num = num; }',148,1),(662,'public int num; protected int getNum() { return num; } protected void setNum(int num) { this.num = num; }',148,0),(663,'private int num; public int getNum() { return num; } private void setNum(int num) { this.num = num; }',148,0),(664,'protected int num; public int getNum() { return num; } public void setNum(int num) { this.num = num; }',148,1),(665,'rotected int num; private int getNum() { return num; } public void setNum(int num) { this.num = num; }',148,0),(666,'Values are : [EE, ME]',149,0),(667,'Values are : [EE, EE, ME]',149,0),(668,'Values are : [EE, ME, EE]',149,0),(669,'Values are : [SE, EE, ME, EE]',149,0),(670,'Values are : [EE, ME, SE, EE]',149,1),(671,'4\nnull',151,0),(672,'null',151,0),(673,'An IllegalArgumentException is thrown at run time',151,0),(674,'An ArrayIndexOutOfBoundException is thrown at run time',151,1),(675,'java.lang',152,1),(676,'java.awt',152,0),(677,'java.util',152,0),(678,'javax.net',152,0),(679,'java.*',152,0),(680,'The package with no name',152,1),(681,'Yellow',153,0),(682,'Maroon',153,0),(683,'compilation fails',153,0),(684,'A StingIndexOutOfBoundsException is thrown at runtime',153,0),(685,'The program prints nothing ',150,0),(686,'d',150,0),(687,'A StringIndexOutOfBoundException is thrown at runtime. ',150,0),(688,'An ArrayIndexOutOfBoundException is thrown at runtime. ',150,0),(689,'A NullPointerException is thrown at runtime. ',150,0),(690,'12',154,0),(691,'Invalid index\n12',154,1),(692,'Invalid index',154,0),(693,'compilation fails',154,0),(694,'lass Z extends X implements Y{\n    public void methodZ(){}\n}',155,0),(695,'bstract class Z extends X implements Y{\n    public void methodZ(){}\n}',155,1),(696,'class Z\n extends X implements Y{\n    public void methodX(){}\n}',155,0),(697,'abstract class Z extends X implements Y{\n}',155,1),(698,'class Z\n extends X implements Y{\n    public void methodY(){}\n}',155,0),(699,'Reference type is Z; object type is Z.',156,0),(700,'Reference type is Y; object type is Y.',156,0),(701,'Reference type is Z; object type is Y.',156,1),(702,'Reference type is X; object type is Z.',156,0),(703,'Load statement: array2d(x,y) = x + y;\nModify statement: array2d(x,y) = array2d(x,y) * 2',157,0),(704,' Load statement: array2d[x y] = x + y;\nModify statement: array2d[x y] = array2d[x y] * 2',157,0),(705,'Load statement: array2d[x,y] = x + y;\nModify statement: array2d[x,y] = array2d[x,y] * 2',157,0),(706,'Load statement: array2d[x][y] = x + y;\nModify statement: array2d[x][y] = array2d[x][y] * 2',157,1),(707,'Load statement: array2d[[x][y]] = x + y;\nModify statement: array2d[[x][y]] = array2d[[x][y]] * 2;',157,0),(708,'It cannot contain elements of different types. ',159,1),(709,'The length of each dimension must be the same. ',159,0),(710,'At the declaration time, the number of elements of the array in each dimension mus be specified.',159,0),(711,'All methods of the class object may be invoked on the two-dimensional array. ',159,1),(712,'Changing the access modifier of a field from public to private',160,1),(713,'Removing the public modifier from a class',160,1),(714,'Changing the return type of a method to void',160,0),(715,'Returning a copy of the contents of an array or ArrayList instead of a direct reference',160,0),(716,'compilation fails ',161,0),(717,'25 is divisible by 5 \nDone ',161,0),(718,'26 is divisible by 5 \nDone',161,1),(719,'27 is divisible by 5 \nDone',161,0),(720,'sc: class.Object\nasc: class.AnotherSampleClass',162,0),(721,'sc: class.SampleClass\nasc: class.AnotherSampleClass',162,0),(722,'sc: class.AnotherSampleClass\nasc: class.SampleClass',162,0),(723,'sc: class.AnotherSampleClass\nasc: class.AnotherSampleClass',162,1),(724,'Zero',158,0),(725,'Once',158,0),(726,'Twice',158,0),(727,'Thrice',158,1),(728,'Compilation fails.',158,0),(729,'static public void main(String[ ] args) {',163,1),(730,'static void main(String[ ] args) {',163,0),(731,'public static void Main(String[ ] args) {',163,0),(732,'public static void main(String[ ] args) {',163,1),(733,'public void main(String[ ] args) {',163,0),(734,'a, e\ni, o',164,0),(735,'a, e\no, o',164,1),(736,'e, e\ni, o',164,0),(737,'e, e\no, o',164,0),(738,'aa\ncc',166,1),(739,'aa\nbb\ncc',166,0),(740,'cc\ndd',166,0),(741,'cc',166,0),(742,'Compilation fails',166,0),(743,'Zero',167,1),(744,'Once',167,0),(745,'Twice',167,0),(746,'Thrice',167,0),(747,'It is not printed because compilation fails',167,0),(748,'Remove the area field',168,0),(749,'Changing the getArea() method as follows:\npublic double getArea() { return Match.PI * radius * radius; }',168,1),(750,'Add the following method:\npublic double getArea() { return Match.PI * radius * radius; }',168,0),(751,'Change the access modifier of setRadius() method to be protected.',168,1),(752,'Adding throws IOException to the main() method signature',169,0),(753,'Adding throws IOException to the doSomething() method signature',169,0),(754,'Adding throws IOException to the main() method signature and to the dosomething() method',169,0),(755,'Adding throws IOException to the dosomething() method and changing the catch argument to\nIOException',169,0),(756,'Adding throws IOException to the main() method signature and changing the catch argument to\nIOException',169,0),(757,'true, false',170,0),(758,'false, true',170,1),(759,'true, true',170,0),(760,'false, false',170,0),(761,'Caught java.lang.RuntimeException: Exception\nException in thread \"main\" java.lang.Error: Error\n   at TestApp.doList(TestApp.java: 14)\n   at TestApp.main(TestApp.java: 6)',171,0),(762,'Exception in thread \"main\" java.lang.Error: Error\n   at TestApp.doList(TestApp.java: 14)\n   at TestApp.main(TestApp.java: 6)',171,0),(763,'Caught java.lang.RuntimeException: Exception\nCaught java.lang.Error: Error',171,0),(764,'Caught java.lang.RuntimeException: Exception',171,0),(765,'Compilation fails',172,1),(766,'An exception is thrown at runtime',172,0),(767,'There is no result because this is not correct way to determin the hash code',172,0),(768,'Hash is: 111111, 44444444, 999999999',172,0),(769,'Hello',173,0),(770,'Default',173,0),(771,'Compilation fails',173,0),(772,'The programm prints nothing',173,0),(773,'An exception is thrown at run time',173,0),(774,'line 3',175,0),(775,'line 4',175,0),(776,'line 5',175,1),(777,'line 6',175,1),(778,' line 10',175,0),(779,'line 11',175,0),(780,' line 12',175,0),(781,' line 13',175,1),(782,'asc = sc;',176,0),(783,'sc = asc;',176,1),(784,'asc = (object)sc;',176,0),(785,'asc = sc.clone();',176,0),(786,'5 : 5',177,1),(787,'6 : 4',177,0),(788,'6 : 5',177,0),(789,'5 : 4',177,0),(790,'68 65 69',174,0),(791,'68 65 65',174,1),(792,'65 68 65',174,0),(793,'65 68 69',174,0),(794,'compilation fails',174,0),(795,'while (key == myarray[index++]) {\n            isFound = true;\n        }',178,0),(796,'while (index <= 4) {\n            if(key == myarray[index]){\n                index++;\n                isFound = true;\n                break;\n            }            \n        }',178,0),(797,'while (index++ < 5) {\n            if(key == myarray[index]){\n                isFound = true;\n            }            \n        }',178,0),(798,'while (index < 5) {\n            if(key == myarray[index]){\n                isFound = true;\n                break;\n            }            \n        }',178,0),(799,'while (index < myarray.length){\n            if (key == myarray[index]) {\n                isFound = true;\n            }\n            index++;\n        }',178,1),(800,' public abstract class Car {\n   protected void accelerate();\n}',179,0),(801,'public interface Car {\n   protected abstract void accelerate();\n}',179,0),(802,'public abstract class Car {\n   protected final void accelerate();',179,0),(803,'public abstract class Car {\n   protected abstract void accelerate();',179,1),(804,'public abstract class Car {\n   protected void accelerate() {\n      // more car can do\n   }\n}',179,1),(805,'10 Hello World!',180,1),(806,'10 Hello Universe!',180,0),(807,'9 Hello World!',180,0),(808,'Compilation fails',180,0),(809,'Result: 10\nResult: 30',181,0),(810,' Result: 10\nResult: 25',181,0),(811,'Result: 235\nResult: 215',181,1),(812,'Result: 215\nResult: 215',181,0),(813,'Compilation fails',181,0),(814,'i = 1\nii = 2',182,0),(815,'compilation fails',182,1),(816,'The program prints nothing',182,0),(817,'The program goes into an infinite loop with no output',182,0),(818,'The program goes into an infinite loop with output:\nii = 1\nii = 1',182,0),(819,'Number is : 12345',183,0),(820,'A NullPointerException is thrown at runtime',183,0),(821,'A NumberFormatException is thrown at runtime',183,0),(822,'An ArrayIndexoutOfBoundsException is thrown at runtime',183,0),(823,' year is set to 1982.',184,0),(824,'bob.year is set to 1982.',184,0),(825,'A runtime error is generated',184,0),(826,'A compile time error is generated',184,1),(827,'class Base1 {\n   abstract class Abs1 { }\n}',185,0),(828,'abstract class Abs1{\n   void doit(){ }\n}',185,0),(829,'class Base1 { }\nabstract class Abs1 extends Base1 { }',185,0),(830,'abstract int var1 = 89',185,1),(831,'1\n2',186,0),(832,'0\n1',186,0),(833,'1\n1',186,0),(834,'2\n2',186,0),(835,'Null',187,0),(836,'Compilation fails',187,0),(837,'An exception is thrown at runtime',187,1),(838,'0',187,0),(839,'List update(Sting[] strs)',188,0),(840,'static ArrayListupdate(String[]strs)',188,0),(841,'static List update (String[] strs)',188,1),(842,'static void update(String[] strs)',188,0),(843,'ArrayList static update(String[] strs)',188,0),(844,' sb.append(\"My dog \" + name + \" is \" + age);\nSystem.out.println(sb);',189,0),(845,' sb.insert(\"My dog \").append( name + \" is \" +age); System.out.println(sb);',189,0),(846,' sb.insert(\"My dog \").insert( name ).insert(\" is \").insert(age); System.out.println(sb);',189,0),(847,'sb.append(\"My dog \").append(name).append(\" is \").append(age); System.out.println(sb);',189,1),(848,'There is no output',190,0),(849,'d is output',190,0),(850,'A StringIndexOutOfBoundsException is thrown at run time',190,1),(851,'An ArrayIndexOutOfBoundsException is thrown a run time',190,0),(852,'A NullPointerException is thrown at run time',190,0),(853,'A StringArrayIndexOutOfBoundsException is thrown at run time',190,0),(854,'28false29\ntrue',191,0),(855,'28false29\ntrue',191,0),(856,'true\ntrue',191,1),(857,'compilation fails',191,0),(858,'123',192,0),(859,'132xxx',192,0),(860,'123456',192,0),(861,'123456xxx',192,0),(862,'compilation fails',192,1),(863,'Marrown\nstring out of limits\nJesOran',193,1),(864,'Marrown\nstring out of limits\narray out of limits',193,0),(865,'Marrown\nstring out of limits',193,0),(866,'Marrown\nNanRed\nJesOran',193,0),(867,' Adding the public modifier to the declaration of class X',194,0),(868,'Adding the protected modifier to the X() constructor',194,0),(869,'Changing the private modifier on the declaration of the one() method to protected',194,1),(870,'Removing the Y() constructor',194,0),(871,'Removing the private modifier from the two() method',194,0),(872,'SpecialException: Thrown at end of doSomething() method',195,0),(873,' Error in thread \"main\" java.lang\nArrayIndexOutOfBoundsError',195,0),(874,'Exception in thread \"main\" java.langArrayIndexOutOfBoundsException: 4 at Main.doSomething\n(Main.java: 12)',195,1),(875,' SpecialException: Thrown at end of doSomething() method at Main.doSomethingElse(Main.java: 16)\nat Main.doSomething(Main.java:13)\nat Main.main(Main.jaba:4)',195,0),(876,'x: 1 y: 2\nx: 3 y: 4',196,0),(877,'x: 0 y: 0\nx: 3 y: 4',196,1),(878,'x: 1 y: 2\nx: 0 y: 0',196,0),(879,'x: 0 y: 0\nx: 0 y: 0',196,0),(880,' 1.0, 1',197,1),(881,'1.0f, 1',197,0),(882,'7.33, 7',197,0),(883,'compilation fails',197,0),(884,'An exception is thrown at runtime',197,0),(885,'After line 8, three objects are eligible for garbage collection',198,0),(886,'After line 8, two objects are eligible for garbage collection',198,0),(887,'After line 8, one object is eligible for garbage collection',198,1),(888,'After line 8, none of the objects are eligible for garbage collection',198,0),(889,' Student student1;',199,0),(890,'Student student1 = Student.new();',199,0),(891,'Student student1 = new Student();',199,1),(892,'Student student1 = Student();',199,0),(893,'line 6 replaced with handy.dandy.keystroke stroke = new KeyStroke();',200,0),(894,'line 6 replaced with handy.*.KeyStroke stroke = new KeyStroke();',200,0),(895,'line 6 replaced with handy.dandy.KeyStroke stroke = new handy.dandy.KeyStroke();',200,1),(896,'import handy.*; added before line 1',200,0),(897,'import handy.dandy.*; added after line 1',200,1),(898,'import handy.dandy.KeyStroke; added after line 1',200,1),(899,'import handy.dandy.KeyStroke.typeException(); added before line 1',200,0),(900,' A class can have only one private constructor.',202,0),(901,' A method can have the same name as a field.',202,1),(902,'A class can have overloaded static methods.',202,1),(903,'A public class must have a main method.',202,0),(904,'The methods are mandatory components of a class.',202,0),(905,'The fields need not be initializes before use',202,1),(906,'They match\nThey really match',203,0),(907,'They really match',203,1),(908,'They match',203,0),(909,'Nothing prints',203,0),(910,'They really match\nThey reallymatch',203,0),(911,'continue, break',204,0),(912,'break,break',204,0),(913,'break, continue',204,0),(914,'continue, continue',204,1),(915,'++a, --b',205,0),(916,'++a, b--',205,1),(917,'a++, --b',205,0),(918,'a++, b--',205,0),(919,'Pass',206,0),(920,'Fail',206,0),(921,'class MarksOutOfBoundsException',206,0),(922,'class IndexOutOfBoundException',206,0),(923,'class Exception',206,0),(924,'11, 21, 31, 11, 21, 31',207,0),(925,'11, 21, 31, 12, 22, 32',207,1),(926,'12, 22, 32, 12, 22, 32',207,0),(927,'10, 20, 30, 10, 20, 30',207,0),(928,'compilation fails',208,1),(929,'The code compiles, but does not execute.',208,0),(930,' Paildrome',208,0),(931,'Wow',208,0),(932,'Mom',208,0),(933,'sb.insert(0,\"Hello \");\nSystem.out.println(sb);',209,1),(934,'sb.append(0,\"Hello \");\nSystem.out.println(sb);',209,0),(935,'b.add(0,\"Hello \");\nSystem.out.println(sb);',209,0),(936,'sb.set(0,\"Hello \");\nSystem.out.println(sb);',209,0),(937,' i: 16\nj: 16',210,0),(938,'16',210,0),(939,' i: 15\nj: 23',210,1),(940,'33',210,0),(941,'i: 16\nj: 33',210,0),(942,'15',210,0),(943,' i: 15\nj: 16',210,0),(944,'23',210,0),(945,'Line 05',211,0),(946,'Line 06',211,0),(947,'Line 07',211,1),(948,'Line08',211,1),(949,'Line 09',211,0),(950,'Line 10',211,1),(951,'lazy lion is jumping',212,0),(952,'lion is always jumping',212,0),(953,'crazy elephant is jumping',212,0),(954,'elephant is always jumping',212,1),(955,'compilation fails',212,0),(956,' if(h1 == h2)',213,0),(957,'if(h1.equals(h2))',213,1),(958,'if(h1 = h2)',213,0),(959,'if(h1.same(h2)',213,0),(960,'float flt = 100F',215,0),(961,'float flt = (float)1_11.00;',215,0),(962,'float flt = 100;',215,0),(963,'double y1 = 203.22;\nfloat flt = y1;',215,1),(964,'int y2 = 100;\nfloat flt = (float)y2;',215,0),(965,'1525',5,1),(966,'13',5,0),(967,'compilation fails',5,0),(968,'An exception is thrown at runtime',5,0),(969,'The programm fails to execute due to runtime error',5,0),(970,' sb.deleteAll();',216,0),(971,'sb.delete(0, sb.size());',216,0),(972,' sb.delete(0, sb.length());',216,1),(973,'sb.removeAll();',216,0),(974,'int [][] array2D;',217,1),(975,'int [2][2] array2D;',217,0),(976,'int array2D [];',217,0),(977,' int [] array2D [];',217,1),(978,'int [][] array2D []',217,0),(979,'10 20 30 40',218,0),(980,'0 0 30 40',218,1),(981,'compilation fails',218,0),(982,'An exception is thrown at runtime',218,0),(983,'10 10',219,1),(984,' 8 9',219,0),(985,'9 8',219,0),(986,'7 10',219,0),(987,'Result: 8\nResult: 8',220,0),(988,'Result: 35\nResult: 8',220,1),(989,'Result: 8\nResult: 35',220,0),(990,'Result: 35\nResult: 35',220,0),(991,'1 2 3 1 2 3',221,0),(992,'1 1 2 1 2 3',221,1),(993,'2 3 4 1 2 3',221,0),(994,'compilation fails',221,0),(995,'The loop executes infinite times',221,0),(996,'Before if clause\nException in thread \"main\" java.lang.Exception\nat Main.doSomething(Main.java:8)\na Main.main(Main.java:3)',223,0),(997,'Before if clause\nException in thread \"main\" java.lang.Exception\nat Main.doSomething(Main.java:8)\na Main.main(Main.java:3)\nAfter if clause',223,0),(998,'Exception in thread \"main\" java.lang.Exception\nat Main.doSomething(Main.java:8)\na Main.main(Main.java:3)',223,0),(999,' Before if clause\nAfter if clause',223,0),(1000,'Catch the exception in the method doSomething().',224,0),(1001,' Declare the exception to be thrown in the doSomething() method signature.',224,0),(1002,'Cast the exception to a RunTimeException in the doSomething() method.',224,0),(1003,'Catch the exception in the method that calls doSomething()',224,0),(1004,'Object array[ ]',222,1),(1005,'Boolean array[3]',222,0),(1006,' int[ ] array',222,1),(1007,'Float[2] array',222,0),(1008,'int f = ps.indexOf{new Patient(\"Mike\")}',225,0),(1009,' int f = ps.indexOf(new Patient(\"Mike\"));',225,0),(1010,'patient p = new Patient(\"Mike\");\nint f = pas.indexOf(p);',225,0),(1011,' int f = ps.indexOf(p2);',225,1),(1012,'One',226,0),(1013,'Two',226,0),(1014,'Three',226,0),(1015,'Compilation fails',226,1),(1016,'one',228,0),(1017,'two',228,0),(1018,'three',228,1),(1019,'four',228,0),(1020,'Found Red',227,0),(1021,'Found Red\nFound Blue',227,1),(1022,'Found Red\nFound Blue\nFound White',227,0),(1023,'Found Red\nFound Blue\nFound White\nFound Default',227,0),(1024,'j',229,1),(1025,'k',229,1),(1026,'x',229,0),(1027,'y',229,0),(1028,'z',229,0),(1029,'local',230,0),(1030,'public',230,1),(1031,'static',230,1),(1032,'volatile',230,0),(1033,'synchronized',230,0),(1034,'SpecialException: Thrown at end of doSomething() method',201,0),(1035,'Error in thread \"main\" java.lang.ArrayIndexOutOfBoundsError',201,0),(1036,'Exception in thread \"main\"java.lang.ArrayIndexOutOfBoundsException: 4\n   at ExceptionTest.doSomething(ExceptionTest.java:13)\n   at ExceptionTest.main(ExceptionTest.java:4)',201,0),(1037,'SpecialException: Thrown at end of doSomething() method\n   at ExceptionTest.doSomethingElse(ExceptionTest.java:16)\n   at ExceptionTest.doSomething(ExceptionTest.java:13)\n   at ExceptionTest.main(ExceptionTest.java:4)',201,0),(1038,'int i : array',231,1),(1039,'int i = 0; i < 1; i++',231,1),(1040,' ;;',231,1),(1041,' ; i < 1; i++',231,0),(1042,' ; i < 1;',231,0),(1043,'Checking for ArrayIndexOutOfBoundException when iterating through an array to determine when all\nelements have been visited.',232,1),(1044,'Checking for Error an, if necessary, restarting the programm to ensure that users are unaware\nproblems',232,1),(1045,'Checking for FileNotFoundException to inform a user that a filename entered is not vaild',232,0),(1046,'Checking for ArrayIndexOutOfBoundException an ensuring that the programm can recover if one occur',232,1),(1047,'Checking for an IOException and ensuring that the programm can recover if one occur',232,0),(1048,'square...',233,0),(1049,'circle...',233,0),(1050,'squarecircle...',233,1),(1051,'Compilation fails',233,0),(1052,'05. class Dog {\n09. public class Poodle extends Dog {',234,0),(1053,'05. abstract Dog {\n09. public class Poodle extends Dog {',234,0),(1054,'05. abstract class Dog {\n09. public class Poodle extends Dog {',234,1),(1055,'05. class Dog {\n09. public class Poodle implements Dog {',234,0),(1056,'05. abstract Dog {\n09. public class Poodle implements Dog {',234,0),(1057,'05. abstract class Dog {\n09. public class Poodle implements Dog {',234,0),(1058,'3 false 1',1,0),(1059,'2 true 3',1,0),(1060,'2 false 3',1,0),(1061,'3 true 1',1,1),(1062,'3 false 3',1,0),(1063,'2 true 1',1,0),(1064,'2 false 1',1,0),(1065,'int sum ( int first, int second ) { first + second; }',235,0),(1066,'int sum ( int first, second ) { return first + second; }',235,0),(1067,'sum ( int first, int second ) { return first + second; }',235,0),(1068,'int sum ( int first, int second ) { return first + second; }',235,1),(1069,' void sum ( int first, int second ) { return first + second; }',235,0),(1070,'log3: false\nlog4: true',214,0),(1071,'log3: true\nlog4: true',214,1),(1072,' log3: true\nlog4: false',214,0),(1073,'log3: false\nlog4: false',214,0),(1074,'for (String c:colors) {\n	if (c.length() != 4){\n		continue;\n	}\n	System.out.print(c+\", \");\n} ',165,1),(1075,'for (String c:colors) {\n           if (c.length() <= 4){\n               continue;\n           }\n           System.out.print(c+\", \");\n}',165,0),(1076,'for (String c:String[] colors\n) {\n           if (c.length() >= 3){\n               continue;\n           }\n           System.out.print(c+\", \");\n}',165,0),(1077,'for (String c:colors) {\n           if (c.length() != 4){\n               System.out.print(c+\", \");\n               continue;\n	}\n}',165,0),(1078,'Java\nJava\nJava',236,0),(1079,'Java\nJeve\nva',236,1),(1080,'Java\nJeve\nve',236,0),(1081,'Compilation fails',236,0),(1082,'They match\nThey really match',237,0),(1083,'They really match',237,1),(1084,'They match',237,0),(1085,'Nothing is printed to the screen',237,0),(1086,'It cannot contain elements of different types. ',238,1),(1087,'The length of each dimension must be the same. ',238,0),(1088,'At the declaration time, the number of elements of the array in each dimension mus be specified.',238,0),(1089,'All methods of the class object may be invoked on the two-dimensional array. ',238,1),(1090,' sb.append(\"My dog \" + name + \" is \" + age);\nSystem.out.println(sb);',239,0),(1091,' sb.insert(\"My dog \").append( name + \" is \" +age); System.out.println(sb);',239,0),(1092,' sb.insert(\"My dog \").insert( name ).insert(\" is \").insert(age); System.out.println(sb);',239,0),(1093,'sb.append(\"My dog \").append(name).append(\" is \").append(age); System.out.println(sb);',239,1),(1094,'line 21',240,0),(1095,'line 22',240,1),(1096,'line 23',240,0),(1097,'line 24',240,0),(1098,'line 25',240,0),(1099,'Total match found: 1 ',241,0),(1100,'Total match found: 2',241,1),(1101,'Total match found: 3 ',241,0),(1102,'Total match found: 5 ',241,0),(1103,'class java.lang.String\nclass java.lang.String\nclass java.util.ArrayList',242,0),(1104,'class java.lang.Object\nclass java.lang.Object\nclass java.util.Collection',242,0),(1105,'lass java.lang.StringBuilder\nclass java.lang.String\nclass java.util.ArrayList',242,1),(1106,'class java.lang.StringBuilder\nclass java.lang.String\nclass java.util.List',242,0),(1107,'Result: 8\nResult: 8',243,0),(1108,'Result: 35\nResult: 8',243,1),(1109,'Result: 8\nResult: 35',243,0),(1110,'Result: 35\nResult: 35',243,0),(1111,'Bob\'s Name: Bob',244,0),(1112,'Bob\'s Name: Jian',244,1),(1113,'Nothing prints',244,0),(1114,'Bob\'s name',244,0),(1115,'Allow a class implementation to change without changing the clients. ',245,1),(1116,'Protects confidential date from leaking out of the objects',245,1),(1117,'Prevents code from causing exceptions. ',245,0),(1118,'Enables the class implementation to protect its invariants. ',245,1),(1119,' Permits classes to be combined into the same package. ',245,0),(1120,' Enables multiple instances of the same class to be created safely. ',245,0),(1121,'class Base1 {\n   abstract class Abs1 { }\n}',246,0),(1122,'abstract class Abs1{\n   void doit(){ }\n}',246,0),(1123,'class Base1 { }\nabstract class Abs1 extends Base1 { }',246,0),(1124,'abstract int var1 = 89;',246,1),(1125,'Marrown\nstring out of limits\nJesOran',247,1),(1126,'Marrown\nstring out of limits\narray out of limits',247,0),(1127,'Marrown\nstring out of limits',247,0),(1128,'Marrown\nNanRed\nJesOran',247,0),(1129,'hEllOjAvA!',248,0),(1130,'Hello java!',248,0),(1131,'Out of limits\nhellojAvA!',248,1),(1132,'Out of limits ',248,0),(1133,'private int num; public int getNum() { return num; } public void setNum(int num) { this.num = num; }',249,1),(1134,'public int num; protected int getNum() { return num; } protected void setNum(int num) { this.num = num; }',249,0),(1135,'private int num; public int getNum() { return num; } private void setNum(int num) { this.num = num; }',249,0),(1136,'protected int num; public int getNum() { return num; } public void setNum(int num) { this.num = num; }',249,1),(1137,'protected int num; private int getNum() { return num; } public void setNum(int num) { this.num = num; }',249,0),(1138,' public abstract class Car {\n   protected void accelerate();\n}',250,0),(1139,'public interface Car {\n   protected abstract void accelerate();\n}',250,0),(1140,'public abstract class Car {\n   protected final void accelerate();',250,0),(1141,'public abstract class Car {\n   protected abstract void accelerate();',250,1),(1142,'public abstract class Car {\n   protected void accelerate() {\n      // more car can do\n   }\n}',250,1),(1143,'one',251,0),(1144,'two',251,0),(1145,'three',251,1),(1146,'four',251,0),(1147,'class java.lang.String\nclass java.lang.String\nclass java.util.ArrayList',252,0),(1148,'class java.lang.Object\nclass java.lang.Object\nclass java.util.Collection',252,0),(1149,'class java.lang.StringBuilder\nclass java.lang.String\nclass java.util.ArrayList',252,1),(1150,'class java.lang.StringBuilder\nclass java.lang.String\nclass java.util.List',252,0),(1151,' Replacing <code1> with index > 0 and replacing <code2> with index--; ',253,1),(1152,'Replacing <code1> with index > 0 and replacing <code2> with --index; ',253,1),(1153,'Replacing <code1> with index > 5 and replacing <code2> with --index; ',253,0),(1154,' Replacing <code1> with index and replacing <code2> with --index; ',253,0),(1155,'This is not the only valid loop construct; there exists another form of for loop constructor. ',254,1),(1156,'The expression expr1 is optional. It initializes the loop and is evaluated once, as the lopp begin. ',254,1),(1157,'When expr2 evaluates to false, the loop terminates. It is evaluated only after each iteration through the loop.',254,0),(1158,'The expression expr3 must be present. It is evaulated after each ietration through the loop. ',254,0),(1159,'t.fvar = 200;',255,0),(1160,'cvar = 400;',255,0),(1161,'fvar = 200;\ncvar = 400;',255,0),(1162,'this.fvar = 200;\nTest2.cvar = 400; ',255,0),(1163,'t.fvar = 200;\nTest2.cvar = 400;',255,1),(1164,' ii = 0\nii = 2',256,1),(1165,' ii = 0\n ii = 0 ii = 1 ii = 2 ii = 3\n',256,0),(1166,'ii =',256,0),(1167,'Compilation fails',256,0),(1168,'Calc c = new Calc();\nint n3 = c.findMid(n1, n2);',257,1),(1169,'int n3 = super.findMid(n1, n2)',257,0),(1170,'Calc c = new Mid();\nint n3 = c.findMid(n1, n2);',257,0),(1171,'Mid m1 = new Calc();\nint n3 = m1.findMid(n1, n2);',257,1),(1172,'int n3 = Calc.findMid(n1, n2);',257,0),(1173,'j',258,1),(1174,'k',258,1),(1175,'x',258,0),(1176,'y',258,0),(1177,'z',258,0),(1178,'There is no output',259,0),(1179,'d is output',259,0),(1180,'A StringIndexOutOfBoundsException is thrown at run time',259,1),(1181,'An ArrayIndexOutOfBoundsException is thrown a run time',259,0),(1182,'A NullPointerException is thrown at run time',259,0),(1183,'A StringArrayIndexOutOfBoundsException is thrown at run time',259,0),(1184,'x = 4, y = 3, z = 2',260,0),(1185,'x = 3, y = 2, z = 3',260,0),(1186,'x = 2, y = 3, z = 3',260,0),(1187,'x = 4, y = 2, z = 3',260,0),(1188,'x = 2, y = 3, z = 4',260,1),(1189,'int [][] array2D;',261,1),(1190,'int [2][2] array2D;',261,0),(1191,'int array2D [];',261,0),(1192,' int [] array2D [];',261,1),(1193,'int [][] array2D []',261,0),(1194,'hEllOjAvA!',262,0),(1195,'Hello java!',262,0),(1196,'Out of limits\nhellojAvA!',262,1),(1197,'Out of limits ',262,0),(1198,'ii = 0\nii = 2',263,1),(1199,' ii = 0\n ii = 0 ii = 1 ii = 2 ii = 3\n',263,0),(1200,'ii =',263,0),(1201,'Compilation fails',263,0),(1202,'reduces memory footprint',264,1),(1203,'implements the Collection API',264,0),(1204,'is multi.thread safe',264,0),(1205,'dynamically resizes based on the number of elements in the list',264,1),(1206,'for (int i = 0; i < arra.length; i++) {\n  for (int j = 0; j < arra[i].length; j++) {\n    arra[i][j] = arra[i][j].toUpperCase();\n  }\n}',265,1),(1207,'for (int i=0;i<3;i++){\n  for (int j =0; j < 4; j++) {\n    arra[i][j] = arra[i][j].toUpperCase();\n  }\n}',265,0),(1208,'for (String a[] : arra[][]) {\n  for (String x : a[]) {\n    toUpperCase();\n  }\n}',265,0),(1209,'for (int i : arra.length) {\n  for (String x : arra) {\n    arra[i].toUpperCase();\n  }\n}',265,0),(1210,'class Cc extends Bb { } ',266,1),(1211,'class Cc extends Ww { }',266,0),(1212,'class Cc extends Ee { }',266,0),(1213,'class Cc extends Dd { } ',266,1),(1214,'0\n1',267,0),(1215,'0\n1\n2',267,1),(1216,'0\n1\n2\n3',267,0),(1217,'Compilation fails.',267,0),(1218,'Class C extends A implements X {}',268,1),(1219,'Class C implements Y extends B {}',268,0),(1220,'Class C extends A, B {}',268,0),(1221,'Class C implements X, Y extends B { }',268,0),(1222,'Class C extends B implements X, Y {} ',268,1),(1223,'Add the public modifier to the declaration of class X ',269,0),(1224,'Remove the private modifier from the X() constructor',269,1),(1225,'Add the protected modifier to the declaration of the one() method ',269,0),(1226,'Remove the Y() constructor',269,0),(1227,'Remove the private modifier from Y() constructor ',269,0),(1228,'Square square = new Square(\"bar\");\nsquare.foo(\"bar\");\nsquare.foo();',270,0),(1229,'Square square = new Square(\"bar\");\nsquare.foo(\"bar\");\nsquare.foo(\"bar\");',270,0),(1230,'Square square = new Square();\nsquare.foo();\nsquare.foo(bar);',270,0),(1231,'Square square = new Square();\nsquare.foo();\nsquare.foo(\"bar\");',270,0),(1232,'Square square = new Square();\nsquare.foo();\nsquare.foo();',270,0),(1233,'Square square = new Square();\nsquare.foo(\"bar\");\nsquare.foo();',270,1),(1234,'public class Test implements SampleCloseable{\n    public void close() throws java.io.IOException{\n        // do something\n    }    \n}',271,0),(1235,'public class Test\n implements SampleCloseable{\n    public void close() throws Exception{\n        // do something\n    }    \n}',271,0),(1236,'public class Test\n implements SampleCloseable{\n    public void close() throws java.io.FileNotFoundException{\n        // do something\n    }    \n}',271,0),(1237,'public class Test\n extends SampleCloseable{\n    public void close() throws java.io.IOException{\n        // do something\n    }    \n}',271,0),(1238,'public class Test\n implements SampleCloseable{\n    public void close(){\n        // do something\n    }    \n}',271,0),(1239,'These are exceptional conditions that a well-written application should \nanticipate and recover from.',272,0),(1240,'These are exceptional conditions that are external to the application, \nand that the application usually cannot anticipate and recover from.',272,0),(1241,'Every class that is a subclass of Exception, excluding RuntimeException \nand its subclasses, is categorized as checked exception.',272,0),(1242,'Every class that is a subclass of RuntimeException and Error is \ncategorized as checked exception.',272,0),(1243,'class Z extends X implements Y{\n    public void methodZ(){}\n}',273,0),(1244,'abstract class Z extends X implements Y{\n    public void methodZ(){}\n}',273,0),(1245,'class Z\n extends X implements Y{\n    public void methodX(){}\n}',273,0),(1246,'abstract class Z extends X implements Y{\n}',273,1),(1247,'class Z\n extends X implements Y{\n    public void methodY(){}\n}',273,1),(1248,' Adding the public modifier to the declaration of class X',274,0),(1249,'Adding the protected modifier to the X() constructor',274,0),(1250,'Changing the private modifier on the declaration of the one() method to protected',274,1),(1251,'Removing the Y() constructor',274,0),(1252,'Removing the private modifier from the two() method',274,0),(1253,'line 6 replaced with handy.dandy.keystroke stroke = new KeyStroke();',275,0),(1254,'line 6 replaced with handy.*.KeyStroke stroke = new KeyStroke();',275,0),(1255,'line 6 replaced with handy.dandy.KeyStroke stroke = new handy.dandy.KeyStroke();',275,1),(1256,'import handy.*; added before line 1',275,0),(1257,'import handy.dandy.*; added after line 1',275,1),(1258,'import handy.dandy.KeyStroke; added after line 1',275,1),(1259,'import handy.dandy.KeyStroke.typeException(); added before line 1',275,0),(1260,'line 3',276,0),(1261,'line 4',276,0),(1262,'line 5',276,1),(1263,'line 6',276,1),(1264,' line 10',276,0),(1265,'line 11',276,0),(1266,' line 12',276,0),(1267,' line 13',276,1),(1268,'StringBuilder sb = new String(\"128\");',277,0),(1269,'StringBuilder sb = StringBuilder.setCapacity(128);',277,0),(1270,'StringBuilder sb = = StringBuilder.getInstance(128);',277,0),(1271,'StringBuilder sb = new StringBuilder(128);',277,1),(1272,'List update(Sting[] strs)',278,0),(1273,'static ArrayList update(String[]strs)',278,0),(1274,'static List update (String[] strs)',278,0),(1275,'static void update(String[] strs)',278,0),(1276,'ArrayList static update(String[] strs)',278,0),(1277,' Successful',279,0),(1278,'Unsuccessful',279,1),(1279,'compilation fails',279,0),(1280,'An exception is thrown at runtime',279,0),(1281,'i: 16\nj: 16',280,0),(1282,'16',280,0),(1283,'i: 15\nj: 23',280,1),(1284,'33',280,0),(1285,'i: 16\nj: 33',280,0),(1286,'15',280,0),(1287,'i: 15\nj: 16',280,0),(1288,'23',280,0),(1289,'c=null\nb = false \nf = 0.0F',281,0),(1290,'c=0\nb = false \nf = 0.0f',281,0),(1291,'c=null\nb = true \nf = 0.0',281,0),(1292,'c=\nb = false \nf = 0.0',281,1),(1293,'3456',282,0),(1294,'3436',282,0),(1295,'5456',282,1),(1296,'3646',282,0),(1297,'p1.Test.class \n0.0',283,0),(1298,'<the summary address referenced by ref>\n0.000000',283,0),(1299,'null\n0.0',283,1),(1300,'compilation fails',283,0),(1301,'A NullPointerException is thrown at runtime',283,0),(1302,'Hello Java! 8\nHello Java! 6\nHello Java! 4',284,0),(1303,'Hello Java! 8\nHello Java! 6',284,0),(1304,'Hello Java! 8',284,1),(1305,'compilation fails',284,0),(1306,'Prints 1 2 3 4 5 once',285,0),(1307,'Prints 1 3 5 once',285,0),(1308,'Prints 1 2 3 4 5 five times',285,0),(1309,'Prints 1 2 3 4 5 six times',285,1),(1310,'compilation fails',285,0),(1311,'Remove the area field',286,0),(1312,'Changing the getArea() method as follows:\npublic double getArea() { return Math.PI * radius * radius; }',286,1),(1313,'Add the following method:\npublic double getArea() { return Math.PI * radius * radius; }',286,0),(1314,'Change the access modifier of setRadius() method to be protected.',286,1),(1315,'Caught java.lang.RuntimeException: Exception\nException in thread \"main\" java.lang.Error: Error\n   at TestApp.doList(TestApp.java: 14)\n   at TestApp.main(TestApp.java: 6)',287,0),(1316,'Exception in thread \"main\" java.lang.Error: Error\n   at TestApp.doList(TestApp.java: 14)\n   at TestApp.main(TestApp.java: 6)',287,0),(1317,'Caught java.lang.RuntimeException: Exception\nCaught java.lang.Error: Error',287,0),(1318,'Caught java.lang.RuntimeException: Exception',287,0),(1319,'Adding the public modifier to the declaraion of method1 at line n1',288,0),(1320,'Removing the public modifier from the defintion of method1 at line n2',288,0),(1321,'Changing the private modifier on the declaration of method2 to public at line n3',288,1),(1322,'Changing the line n4 to DoClass doi = new DoClass();',288,1),(1323,' if(h1 == h2)',289,0),(1324,'if(h1.equals(h2))',289,1),(1325,'if(h1 = h2)',289,0),(1326,'if(h1.same(h2)',289,0),(1327,'011',290,1),(1328,'012',290,0),(1329,'123',290,0),(1330,'000',290,0),(1331,'int i : array',291,0),(1332,'int i=0;i<1;i++',291,0),(1333,';;',291,0),(1334,';i<1;i++',291,0),(1335,'i=0;i<1',291,0),(1336,'Hello',292,1),(1337,'Default',292,0),(1338,'Compilation fails',292,0),(1339,'The programm prints nothing',292,0),(1340,'An exception is thrown at run time',292,0),(1341,'This is not the only valid loop construct; there exists another form of for loop constructor. ',293,1),(1342,'The expression expr1 is optional. It initializes the loop and is evaluated once, as the lopp begin. ',293,1),(1343,'When expr2 evaluates to false, the loop terminates. It is evaluated only after each iteration through the loop.',293,0),(1344,'The expression expr3 must be present. It is evaluated after each iteration through the loop. ',293,0),(1345,'t.fvar = 200;',294,0),(1346,'cvar = 400;',294,0),(1347,'fvar = 200;\ncvar = 400;',294,0),(1348,'this.fvar = 200;\nTest2.cvar = 400; ',294,0),(1349,'t.fvar = 200;\nTest2.cvar = 400;',294,1),(1350,'this.fvar = 200; \nthis.cvar = 400; ',294,0);
/*!40000 ALTER TABLE `answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES (1,'Java Basics'),(2,'Working with Java data types'),(3,'Methods and Encapsulation'),(4,'String,StringBuilder,Arrays,and ArrayList'),(5,'Flow Control'),(6,'Working with inheritance'),(7,'Exception handling');
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category2question`
--

DROP TABLE IF EXISTS `category2question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category2question` (
  `category_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  KEY `category_id` (`category_id`),
  KEY `question_id` (`question_id`),
  CONSTRAINT `category2question_ibfk_1` FOREIGN KEY (`category_id`) REFERENCES `category` (`id`),
  CONSTRAINT `category2question_ibfk_2` FOREIGN KEY (`question_id`) REFERENCES `question` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category2question`
--

LOCK TABLES `category2question` WRITE;
/*!40000 ALTER TABLE `category2question` DISABLE KEYS */;
INSERT INTO `category2question` VALUES (1,5),(1,6),(1,7),(1,10),(1,14),(1,16),(1,27),(1,28),(1,29),(1,31),(1,34),(1,41),(1,43),(1,47),(1,48),(1,52),(1,57),(1,59),(1,62),(1,63),(1,65),(1,69),(1,78),(1,79),(1,82),(1,86),(1,87),(1,97),(1,102),(1,106),(1,108),(1,110),(1,117),(1,125),(1,130),(1,135),(1,152),(1,154),(1,163),(1,164),(1,174),(1,175),(1,176),(1,178),(1,179),(1,180),(1,182),(1,185),(1,186),(1,190),(1,198),(1,199),(1,202),(1,205),(1,208),(1,212),(1,218),(1,221),(1,225),(1,226),(1,228),(1,230),(1,231),(1,232),(1,234),(1,235),(1,246),(1,250),(1,251),(1,259),(1,267),(1,276),(1,281),(2,3),(2,35),(2,37),(2,44),(2,48),(2,51),(2,52),(2,76),(2,83),(2,85),(2,96),(2,97),(2,117),(2,127),(2,138),(2,140),(2,141),(2,148),(2,176),(2,191),(2,192),(2,197),(2,203),(2,214),(2,215),(2,220),(2,222),(2,240),(2,241),(2,242),(2,243),(2,249),(2,252),(2,279),(2,282),(3,2),(3,17),(3,19),(3,20),(3,25),(3,27),(3,32),(3,33),(3,56),(3,70),(3,71),(3,72),(3,84),(3,88),(3,95),(3,99),(3,101),(3,104),(3,105),(3,115),(3,126),(3,136),(3,156),(3,160),(3,166),(3,168),(3,170),(3,184),(3,185),(3,193),(3,196),(3,210),(3,219),(3,244),(3,245),(3,246),(3,247),(3,280),(3,283),(3,286),(4,1),(4,4),(4,13),(4,15),(4,18),(4,22),(4,24),(4,26),(4,38),(4,49),(4,58),(4,61),(4,92),(4,98),(4,100),(4,113),(4,114),(4,122),(4,123),(4,124),(4,128),(4,145),(4,149),(4,151),(4,157),(4,159),(4,165),(4,178),(4,187),(4,188),(4,189),(4,195),(4,207),(4,209),(4,216),(4,217),(4,222),(4,236),(4,237),(4,238),(4,239),(4,248),(4,261),(4,262),(4,264),(4,265),(4,277),(4,278),(5,4),(5,11),(5,12),(5,21),(5,29),(5,40),(5,42),(5,45),(5,46),(5,50),(5,55),(5,60),(5,66),(5,68),(5,80),(5,86),(5,89),(5,91),(5,93),(5,110),(5,111),(5,112),(5,121),(5,131),(5,132),(5,134),(5,137),(5,146),(5,147),(5,158),(5,161),(5,167),(5,177),(5,181),(5,186),(5,190),(5,196),(5,204),(5,227),(5,229),(5,231),(5,233),(5,253),(5,254),(5,255),(5,256),(5,257),(5,258),(5,259),(5,260),(5,263),(5,267),(5,284),(5,285),(5,290),(5,292),(5,293),(5,294),(6,9),(6,19),(6,23),(6,30),(6,36),(6,39),(6,54),(6,64),(6,65),(6,90),(6,107),(6,109),(6,114),(6,118),(6,119),(6,133),(6,142),(6,143),(6,144),(6,155),(6,156),(6,162),(6,172),(6,194),(6,200),(6,205),(6,211),(6,213),(6,234),(6,266),(6,268),(6,269),(6,270),(6,273),(6,274),(6,275),(6,288),(6,289),(7,8),(7,53),(7,59),(7,60),(7,67),(7,72),(7,73),(7,74),(7,75),(7,77),(7,81),(7,94),(7,103),(7,116),(7,120),(7,129),(7,139),(7,150),(7,153),(7,169),(7,171),(7,173),(7,183),(7,195),(7,201),(7,206),(7,223),(7,224),(7,232),(7,271),(7,272),(7,287),(7,291);
/*!40000 ALTER TABLE `category2question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question`
--

DROP TABLE IF EXISTS `question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `question` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` varchar(1024) DEFAULT NULL,
  `inactive` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=295 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question`
--

LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (1,'Given code: \n\nint[ ][ ] array2D = { {0,1,2}, {3,4,5,6} }; \n\n	System.out.print(array2D[0].length + \" \");\n	System.out.print(array2D[1].getClass().isArray() + \" \");\n	System.out.println(array2D[0][1]); \n\nWhat is the result ?\n',0),(2,'View the exhibit:\npublic class Student {\n    public String name = \"\";\n    public int age = 0;\n    public String major = \"undeclared\";\n    public boolean fulltime = true;\n    public void display(){\n        System.out.println(\"Name: \" + name + \" Major: \" + major);\n    }\n    public boolean isFulltime(){\n        return fulltime;\n    }\n}\npublic class TestStudent {\n    public static void main(String[] args) {\n        Student bob = new Student();\n        Student jian = new Student();\n        bob.name = \"Bob\";\n        bob.age = 19;\n        jian = bob;\n        jian.name = \"Jian\";\n        System.out.println(\"Bob\'s Name: \" + bob.name);\n    }\n}\nWhat is the result when this program is executed?',0),(3,'Given the code fragment:\n\nString valid = \"true\";\nif(valid) System.out.println(\"valid\");\nelse     System.out.println(\"not valid\");\n\nWhat is the result?\n',0),(4,'public class Scopetest {\n    int z;\n    public static void main(String[] args){\n        Scopetest myScope = new Scopetest();\n        int z = 6;\n        System.out.println(z);\n        myScope.doStuff();\n        System.out.println(z);\n        System.out.println(myScope.z);\n    }\n    void doStuff(){\n        int z = 5;\n        doStuff2();\n        System.out.println(z);\n    }\n    void doStuff2(){\n        z = 4;\n    }\n}\nWhat is the result?',0),(5,'Given:\n\nclass Alpha {\n    public String[ ] main = new String[2];     \n    Alpha(String[ ] main) {\n        for (int ii = 0; ii < main.length; ii++) {\n            this.main[ii] = main[ii] + 5;\n        }\n    }\n    public void main() {\n        System.out.print(main[0] + main[1]);\n    }\n}\npublic class Test {     \n  public static void main(String[ ] args) {         \n	Alpha main = new Alpha(args);\n        main.main();\n   }\n}\n\nAnd the commands:\n\njavac Test.java \njava Test 1 2\n\nWhat is the result?\n\n',0),(6,'Given:\n\nclass X{}\n\nclass Y{ Y () {} }\n\nclass Z { Z (int i) {} }\n\nWhich class has a default constructor?',0),(7,'What is the proper way to define a method that takes two int values and returns their sum as an int value? \n',0),(8,'Which two are Java Exception classes?',0),(9,'Given: \n\npackage p1;\npublic interface DoInterface {\n	void method1(int n1); 	// line n1 \n}\npackage p3;\nimport p1.DoInterface;\npublic class DoClass implements DoInterface{\n	public DoClass(int p1) { }\n	public void method1 (int p1) { } // line n2 \n	private void method2 (int p1) { } // line n3 \n}\npublic class Test {\n	public static void main(String[] args) {\n		DoInterface doi= new DoClass(100); // line n4 \n		doi.method1(100);\n		doi.method2(200);\n	}\n} \n\nWhich changes will enable the code to compile?',0),(10,'Given:\n\npublic class Test {\n    public static void main(String[] args) {         \n	Test ts = new Test();         \n	System.out.print(isAvailable + \" \");         \n	isAvailable = ts.doStuff();         \n	System.out.println(isAvailable);\n    }\n    public static boolean doStuff() {\n        return !isAvailable;\n    }\n    static boolean isAvailable = false; }\n\nWhat is the result?\n',0),(11,'Given the code fragment:\npublic class Test {\n     public static void main(String[] args) {\n           boolean isChecked = false;\n           int arry[] = {1, 3, 5, 7, 8, 9};\n           int index = arry.length;\n           while (<code1>) {\n               if (arry[index-1] % 2 == 0) {\n                  isChecked = true;\n              }\n              <code2>\n          }\n          System.out.print(arry[index] + \", \" + isChecked);\n    }\n }\n\nWhich ste of changes enable the code to print 1, true?\n',0),(12,'Given the for loop construct: \n\nfor ( expr1; expr2; expr3 ) {\n	statement;\n} ',0),(13,'Given:\n\npublic class TestLoop {\n    public static void main(String[] args) {\n        int array[] = {0, 1, 2, 3, 4};\n        int key = 3;\n        for (int pos = 0; pos < array.length; ++pos){\n            if (array[pos] == key) {\n                break;\n            }\n        }\n        System.out.println(\"Found \" + key + \" at \" + pos);\n    }\n } \n\nWhat is the result? ',0),(14,'Given the code fragment in a file Traveler.java:\n\nclass Tours {\n    public static void main(String[ ] args) {\n        System.out.print(\"Happy Journey! \" + args[1]);\n    }    \n}\npublic class Traveler {\n    public static void main(String[ ] args) {\n        Tours.main(args);\n    }\n}\n\nAnd the commands:\n\njavac Traveler.java\njava Traveler Java Duke\n\nWhat is the result?',0),(15,'Given the fragment: \n\nString[][] arra = new String[3][];\narra[0] = new String[]{\"rose\", \"lily\"};\narra[1] = new String[]{\"apple\", \"cherry\", \"grapes\"};\narra[2] = new String[]{\"beans\", \"carrot\", \"potato\"};\n// insert code here \n\nWhich code fragment, when inserted at line // insert code here, enables the code to \nsuccessfully change arra elements to uppercase?',0),(16,'Given:\n\npublic static void main(String[ ] args) {\n\n   int a, b, c = 0;\n   int a, b, c;\n   int g, int h, int i = 0;\n   int d, e, F;\n   Int k, l, m = 0;\n}\n\nWhich two declarations will compile?',0),(17,'Given: \n\npublic class MyClass {\n    public static void main(String[] args) {\n        String s = \"Java Duke\";\n        int len = s.trim().length();\n        System.out.print(len);\n    }\n } \n\nWhat is the result? ',0),(18,'Given the class definitions:\n\nclass Alpha {\n    public String doStuff(String msg) {\n        return msg;\n    }\n}\nclass Beta extends Alpha {\n    public String doStuff(String msg) {\n        return msg.replace(\'a\', \'e\');\n    }\n}\nclass Gamma extends Beta {\n    public String doStuff(String msg) {\n        return msg.substring(2);\n    }\n}\n\nAnd the code fragment of the main() method:\n\nList<Alpha> strs = new ArrayList<Alpha>();\nstrs.add(new Alpha());\nstrs.add(new Beta());\nstrs.add(new Gamma());\nfor (Alpha t : strs) {\n     System.out.println(t.doStuff(\"Java\"));\n}\n\nWhat is the result?',0),(19,'Given:\n\nclass X {\n    int x1, x2, x3;\n}\nclass Y extends X {\n    int y1;\n    Y() {\n        x1 = 1;\n        x2 = 2;\n        x3 = 10;\n    }\n}\nclass Z extends Y {\n    int z1;\n    Z() {\n        x1 = 3;\n        x2 = 20;\n        x3 = 100;        \n    }\n}\npublic class Test3 {\n    public static void main(String[] args) {\n        Z obj = new Z();\n        System.out.println(obj.x3 + \", \" + obj.y1 + \", \" + obj.z1);\n    }\n}\n\nWhich constructor initializes the variable x3?\n',0),(20,'\npublic class StringReplace {\n\npublic static void main(String[] args) {\n\nString message = \"Hi everyone!\";\n\nSystem.out.println(\"message = \" + message.replace(\"e\",\"X\"));\n\n}} \n\nWhat is the result? ',0),(21,'Given the code fragment:\n\nint  j= 0, k = 0;\n\nfor( int i=0; i < x; i++) {\n   do {\n      k = 0;\n      while ( k < z ) {\n         k++;\n         System.out.print(k + \" \");\n      }\n      System.out.println(\" \");\n      j++;\n   } while ( j < y );\n   System.out.println(\"---\");\n}\n\nWhat values of x, y, z will produce the following result?\n1 2 3 4\n1 2 3 4\n1 2 3 4\n---\n1 2 3 4\n---',0),(22,'Which two statemens are true for a two-dimensional array? \n\n',0),(23,'Given: \n\npackage pkg1;\n class Bb {}\n public class Ee {\n    private Ee() {}\n }\n\npackage pkg2;\nfinal class Ww { }\n\npackage pkg3;\npublic abstract class Dd {\n    void m() {}\n } \n\n1 package pkg4;\n2 import pkg1.*; \n3 import pkg2.*; \n4 import pkg3.*; \n5 // insert a class definition here \n\nWhich two definitionsm when inserted independently at line 5, enable the code to compile? ',0),(24,'Given: \n\npublic class Test {\n  static String[][] arr = new String[3][];\n  private static void doPrint(){\n    // insert code here \n  }\n  public static void main(String[] args) {\n    String[] class1 = {\"A\", \"B\", \"C\"};\n    String[] class2 = {\"L\", \"M\", \"N\", \"O\"}; \n    String[] class3 = {\"I\", \"J\"};\n    arr[0] = class1;\n    arr[1] = class2;\n    arr[2] = class3;\n    Test.doPrint();\n  }\n} \n\nWhich codefragment, when inserted at line // insert code here, \nenables the code to print COJ?',0),(25,'Which three statements are benefits of encapsulation? ',0),(26,'Which statement initializes a StringBuilder to a capacity of 128?',0),(27,'The protected modifier on a Field declaration within a public class means that the field ______ . ',0),(28,'Which two will compile and can be run successfully using the command: \n\njava fred1 hello walls ',0),(29,'Given:\n\npublic class DoCompare4 {\n   public static void main(String[] args){\n      String[ ] table = {\"aa\", \"bb\", \"cc\"};\n      int ii = 0;\n      do\n         while (ii < table.length)\n            System.out.println(ii++);\n      while (ii < table.length);\n   }\n}',0),(30,'Given:\n\nclass Dog {\n    Dog() {\n        try {\n            throw new Exception();\n        } catch (Exception e) { }\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n          Dog d1 = new Dog();\n          Dog d2 = new Dog();\n          Dog d3 = d2;\n          // do complex stuff\n    }\n}\nHow many objects have been created when line //do complex stuff is reached?\n',0),(31,'Given: \n\npublic class FieldInit {\n  char c;\n  boolean b;\n  float f;\n  void printAll() {\n    System.out.println(\"c = \" + c);\n    System.out.println(\"c = \" + b);\n    System.out.println(\"c = \" + f);\n  }\n  public static void main(String[] args) {\n    FieldInit f = new FieldInit();\n    f.printAll();\n  }\n} \n\nWhat is the result?',0),(32,'Given: \n\nclass Caller {private void init() {\n	System.out.println(\"Initialized\");\n}\npublic void start() {\n	init();System.out.println(\"Started\");}} \n\npublic class TestCall {public static void main(String[] args) {Caller c = new Caller(); \n	c.start();c.init();}} \n\n',0),(33,'Given: \n\npublic class Test{\n    public static void main(String[] args) {\n        char[] arr = {\n                97, \'\\t\', \'e\', \'\\n\', \'i\', \'\\t\', \'o\'\n        };\n        for(char var : arr){\n            System.out.print(var);\n        }\n        System.out.println(\"\\nThe length is :\" + arr.length);\n    } ',0),(34,'A method is declared to take three arguments. A programm calls this method and passes only two\narguments. What is the result?',0),(35,'Given the code fragment: \n\nString[] cartoons = {\"tom\", \"jerry\", \"micky\", \"tom\"};\nint counter = 0;\nif (\"tom\".equals(cartoons[0])) {\n  counter++;\n}else if (\"tom\".equals(cartoons[1])) {\n  counter++;\n}else if (\"tom\".equals(cartoons[2])) {\n  counter++;\n}else if (\"tom\".equals(cartoons[3])) {\n  counter++;\n}\nSystem.out.println(counter); \n\nWhat is the result?',0),(36,'Given: \n\npublic class X implements Z {public String toString() {\n	return \"X \";}\n\npublic static void main(String[] args) {\n	Y myY = new Y();\n	X myX = myY;\n	Z myZ = myX;\n	System.out.println(myX);\n	System.out.println((Y)myX);\n	System.out.println(myZ);\n\n}}class Y extends X {\n	public String toString() {return \"Y \";}} ',0),(37,'Given:\n\npublic class CharToStr {\n    public static void main(String[] args) {\n        String str1 = \"Java\";\n        char str2[] = {\'J\', \'a\', \'v\', \'a\'};\n        String str3 = null;\n        for (char c : str2) {\n            str3 = str3 + c;\n        }\n        if (str1.equals(str3))\n            System.out.println(\"Successful\");\n        else\n            System.out.println(\"Unsuccessful\");\n    }\n}\n\nWhat is the result?',0),(38,'int[] array = {1,2,3,4,5};\nSystem.arraycopy(array, 2, array, 1, 2);\nSystem.out.print(array[1]);\nSystem.out.print(array[4]);\n\nWhat is the result?',0),(39,'Given class definitions: \n\nclass Shape { } \nclass Square extends Shape { } \n\nGiven the variable declarations: \n\nShape shape1 = null; \nSquare square1 = null; \n\nWhich four compile? ',0),(40,'Given: \n\npublic class Test {\n  public static void main(String[] args) {\n    int day= 1;\n    switch(day) {\n      case \"7\": System.out.print(\"Uranus\");\n      case \"6\": System.out.print(\"Saturn\");\n      case \"1\": System.out.print(\"Mercury\");\n      case \"2\": System.out.print(\"Venus\");\n      case \"3\": System.out.print(\"Earth\");\n      case \"4\": System.out.print(\"Mars\"); \n      case \"5\": System.out.print(\"Jupiter\");\n    }\n  }\n} \n\nWhich two modifications, made independently, enable the code to compile and run?',0),(41,'Given: \n\n1. public abstract class Wow {\n2. private int wow;\n3. public Wow(int wow) {\n4. this.wow = wow;\n5. }\n6. public void wow() { }\n7. private void wowza() { }\n8. } \nWhat is true about class Wow? ',0),(42,'Given the following code fragment:\n\nif (value >= 0) {\n   if (value != 0)\n      System.out.print(\"the \");\n   else\n      System.out.print(\"quick \");\n   if (value < 10)\n      System.out.print(\"brown \");\n   else if (value > 30)\n      System.out.print(\"fox \");\n   else if (value < 50)\n      System.out.print(\"jumps \");\n   else if (value < 10)\n      System.out.print(\"over \");\n   else\n      System.out.print(\"the \");\n   if (value > 10)\n      System.out.print(\"lazy \");\n} else {\n   System.out.print(\"dog \");\n}\nSystem.out.println( \"...\" );\n\nWhat is the result if the integer value is 33?',0),(43,'Given: \n\npublic class CheckIt {\n    public static void main(String[] args) {\n        if (doCheck()) {\n            System.out.print(\"square\");\n        }\n        System.out.print(\"...\");\n    }\n    public static int doCheck() {\n        return 0;\n    }\n } ',0),(44,'Given: \n\npublic class Test {\n  public static void main(String[] args) {\n    try {\n      String[] arr = new String[4];\n      arr[1] = \"Unix\";\n      arr[2] = \"Linux\";\n      arr[3] = \"Solaris\";\n      for (String var : arr) {\n	System.out.print(var + \" \");\n      }\n    } catch (Exception e) {\n	System.out.print(e.getClass());\n    }\n  }\n} \n\nWhat is the result?',0),(45,'class Alpha {\n	int ns;\n	static int s;\nAlpha (int ns) {\n	if (s < ns) {\n		s = ns;\n		this.ns = ns; \n		}\n	}\nvoid doPrint() {\n	System.out.println(\"ns = \" + ns + \" s = \" + s);\n	}\n} \n	AND \npublic class TestA {\n	public static void main(String[] args) {\n	Alpha ref1 = new Alpha(50);\n	Alpha ref2 = new Alpha(125);\n	Alpha ref3 = new Alpha(100);\n	ref1.doPrint();\n	ref2.doPrint();\n	ref3.doPrint();\n	}\n} ',0),(46,'Given:\n\npublic class Series {\n    private boolean flag;\n    public void displaySeries() {\n        int num = 2;\n        while (flag) {\n            if (num % 7 == 0)\n                flag = false;\n            System.out.print(num);\n            num += 2;\n        }\n    }\n    public static void main(String[] args) {\n        new Series().displaySeries();\n    }\n}\n\nWhat is the result?',0),(47,'Given: \n\npublic class Test { } \n\nFrom which class does the java compiler implicitly derive Test',0),(48,'Given: \n\nint var1 = 5;\nint var2 = var1--;\nint var3 = 0;\nif (var2 < 0) {\n  var3 = var2++;\n} else { \n  var3 = --var2;\n}\nSystem.out.println(var3); \n\nWhat is the result?',0),(49,'Given: \n\nList colors = new ArrayList();\ncolors.add(\"green\");\ncolors.add(\"red\");\ncolors.add(\"blue\");\ncolors.add(\"yellow\");\ncolors.remove(2);\ncolors.add(3, \"cyan\");\nSystem.out.print(colors); \n\nWhat is the result?',0),(50,'Given: \n\nclass App {\n    private boolean flag;\n    public void displayResult() {\n        int result = flag ? 5 : 10;\n        System.out.print(\"Result = \" + result++);\n    }\n    static public void main(String[] args) {\n        new App().displayResult();\n    }\n} \n\nWhat is the result?',0),(51,'Given:\n\n24  float var1 = (12_345.01 >= 123_45.00) ? 12_456 : 124_56.02f;\n25  float var2 = var1 + 1024;\n26  System.out.print(var2);\n\nWhat is the result?',0),(52,'Given: \n\npublic class TestOperator {\n  public static void main(String[ ] args) {\n    int result = 30 -12 / (2 * 5) +1;\n    System.out.print(\"Result = \" + result);\n  }\n}\n\nWhat is the result?',0),(53,'Which three are advantages of the Java exception mechanism?',0),(54,'Given: \n\nclass A{ }\nclass B { } \ninterface X { }\ninterface Y { } \n\nWhich code will compile?\n\n\n',0),(55,'Given: \n\nclass X {\n   static void m(int[] i) {\n      i[0] += 7;\n   }\n   public static void main(String[] args) {\n      int[] j = new int[1];\n      j[0] = 12;\n      m(j);\n      System.out.println(j[0]);\n\nWhat is the result? ',0),(56,'Given: \n\nclass Prime {\n    int num;\n    Prime (int num) {\n        this.num = num;\n    }\n} \npublic class Test {\n    public static void main(String[] args) {\n          Prime obj1 = new Prime(13);\n          Prime obj2 = new Prime(13);\n          if (obj1 == obj2) {\n              System.out.println(\"Equal\");\n          } else {\n              System.out.println(\"Not equal\");\n          }\n          if (obj1.equals(obj2)) {\n              System.out.println(\"Equal\");\n          } else {\n              System.out.println(\"Not equal\");\n          }\n    }\n}\n\n What is the result? ',0),(57,'Given:\n\npublic class MyFor3 {\n  public static void main(String[] args) {\n      int[ ] xx = null;\n      for ( int ii: xx) {\n         System.out.println(ii);\n      }\n   }\n}',0),(58,'Given:\n\n07   StringBuilder sb1 = new StringBuilder(\"Duke\");\n08   String str1 = sb1.toString();\n09   // insert code here\n10   System.out.println(str1 == str2);\n\nWhich code fragment, when inserted at line 9, enables the code to print true?',0),(59,'Given:\n\npublic class Main {\n  public static void main(String[ ] args) {\n      doSomething();\n   }\n   private static void doSomething() {\n      doSomethingElse();\n   }\n   private static void doSomethingElse() {\n      throw new Exception();\n   }\n}\n\nWhich approach ensures that the class can be compiled and run?',0),(60,'Given: \n\nclass Sports {\n  int num_players;\n  String name, ground_condition;\n  Sports(int np, String sname, String sground) {\n    num_players = np;\n    name = sname;\n    ground_condition = sground;\n  }\n}\nclass Cricket extends Sports {\n  int num_umpires;\n  int num_substitues;\n  // insert code here \n} \n\nWhich codefragment can be inserted at line // insert code here, \nto enable the code to compile?',0),(61,'Given: \n\nclass X {\n   static void m(StringBuilder sb1) {\n      sb1.append(\"er\");\n   }\n   public static void main(String[] args) {\n      StringBuilder sb2 = new StringBuilder(\"moth\");\n      m(sb2);\n      System.out.println(sb2);\n   } \n} \n\nWhat is the result? ',0),(62,'Given:\n\npublic class ScopeTest1 {\n   public static void main(String[ ] args) {\n      doStuff();                      // line x1\n      int x1 = x2;                  // line x2\n      int x2 = j;                     // line x3\n   }\n   static void doStuff() {\n      System.out.println(j);     // line x4\n   }\n   static int j;\n}\n\nWhich line causes a compilation error?',0),(63,'Which two statements are true? \n\n',0),(64,'Given:  \n\n class X {    \n  private X() { }    \n   void one() { }\n } \n public class Y extends X{  \n  private Y() { }   \n  public static void main(String[] args) {     \n    new Y().one();\n   }  \n}   \n\nWhich change will make this code compile?',0),(65,'Given:\n\nclass Overloading {\n   void x(int i) {\n      System.out.println(\"one\");\n   }\n\n   void x(String s) {\n      System.out.println(\"two\");\n   }\n\n   void x(double d) {\n      System.out.println(\"three\");\n   }\n\n   public static void main(String[] args) {\n      new Overloading().x(4.0);\n   }\n}\n\nWhat is the result?',0),(66,'Given the code fragment: \n\npublic class Test2 {\n	int fvar;\n	static int cvar;\npublic static void main(String[] args) {\n	Test2 t = new Test2();	\n	// insert code here to write field variables \n	}\n} \n',0),(67,'Given: \n\npublic class X {\n  static int i;\n  int j;\n  public static void main(String[] args) {\n    X x1 = new X();\n    X x2 = new X();\n    x1.i = 3;\n    x1.j = 4;\n    x2.i = 5;\n    x2.j = 6;\n    System.out.println(\n      x1.i+ \" \" +\n      x1.j + \" \" +\n      x2.i+ \" \" +\n      x2.j);\n  }\n} \n\nWhat is the result?',0),(68,'Given the code fragment:\n\nint row = 10;\nfor ( ;row > 0; ) {\n    int col = row;\n    while (col >= 0) {\n        System.out.print(col + \" \");\n        col -= 2;\n    }\n    row = row / col;\n}\n\nWhat is the result?',0),(69,'Which statement is true about the default constructor of a top-level class?',0),(70,'Given the code fragment: \n\npublic class Test {\n  public static void main(String[] args) {\n    Test t = new Test();\n    int[] arr = new int[10];\n    arr = t.subArray(arr,0,2);\n  } \n  // insert code here \n} \n\nWhich method can be inserted at line // insert code here to enable the code to compile?',0),(71,'Given: \n\npublic class TestField {\n  int x;\n  int y;\n  public void doStuff(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n  public void display() {s\n    System.out.print(x + \" \" + y + \" : \");\n  }\n  public static void main(String[] args) {\n    TestField m1 = new TestField();\n    m1.x = 100;\n    m1.y = 200;\n    TestField m2 = new TestField();\n    m2.doStuff(m1.x, m1.y);\n    m1.display();\n    m2.display();\n  }  \n} \n\nWhat is the result?',0),(72,'Given: \n\npackage p1;\npublic class Test {\n  static double dvalue;\n  static Test ref;\n  public static void main(String[] args) {\n    System.out.println(ref);\n    System.out.println(dvalue);\n  }\n} \n\nWhat is the result?',0),(73,'View the exhibit: \n\nclass MissingInfoException extends Exception { }\nclass AgeOutofRangeException extends Exception {} \n\nclass Candidate {\n	String name;\n	int age;\n	Candidate (String name, int age) throws Exception {\n	  if (name == null) {\n		throw new MissingInfoException();\n	  } else if (age <= 10 || age >= 150) {\n		throw new AgeOutofRangeException();\n	  } else {\n		this.name = name;\n		this.age = age;\n	  }\n	}\n	public String toString() {\n		return name + \" age: \" + age;\n	}\n} \n\nGiven the code fragment: \n\n04. public class Test {\n05.	   public static void main(String[] args) {\n06. 		Candidate c = new Candidate(\"James\", 20);\n07. 		Candidate c1 = new Candidate(\"Williams\", 32);\n08.		System.out.println(c); \n\n09. 		System.out.println(c1);\n10.	   }\n11. } \nWhich change enables the code to print the following? \n\nJames age: 20 \nWilliams age: 32 \n',0),(74,'Given: \n\npublic class Natural {\n  private int i;\n  void disp() {\n    while (i <= 5) {\n      for (int i = 1; i <=5;) {\n	System.out.print(i + \" \");\n	i++;\n      }\n      i++;\n    }\n  }\n  public static void main(String[] args) {\n    new Natural().disp();\n  }\n} \n\nWhat is the result?',0),(75,'Given: \n\npublic class Test {\n  static boolean bVar;\n  public static void main(String[] args) {\n    boolean bVar1 = true;\n    int count = 8;\n    do {\n      System.out.println(\"Hello Java! \" + count);\n      if (count >= 7) {\n	bVar1 = false;\n      }\n    } while (bVar != bVar1 && count > 4); \n    count -= 2;\n  }\n} \n\nWhat is the result? ',0),(76,'Given the code fragment: \n\nSystem.out.println(2 + 4 * 9 -3); // line 21 \nSystem.out.println((2 + 4) * 9 -3); // line 22 \nSystem.out.println(2 + (4 * 9) -3); // line 23 \nSystem.out.println(2 + 4 * (9 -3)); // line 24 \nSystem.out.println((2 + 4 * 9) -3); // line 25 ',0),(77,'public class Test {\n	static void dispResult (int[] num) {\n		try {\n			System.out.println(num[1] / (num[1] -num[2]));\n		} catch (ArithmeticException e){\n		System.out.println(\"First exception\");\n		}\n		System.out.println(\"Done\");\n	} \n\npublic static void main(String[] args) {\n	try {\n		int[] arr = {100,100};\n		dispResult(arr);\n	} catch(IllegalArgumentException e) {\n		System.err.println(\"Second exception\");\n	} catch(Exception e) {\n		System.out.println(\"Third exception\");\n		}\n	}\n} \n\nWhat is the result? ',0),(78,'Given: \n\nclass Base {\n  public static void main(String[ ] args) {\n    System.out.println(\"Base \" + args[2]);\n  }\n}\npublic class Sub extends Base {\n  public static void main(String[ ] args) {\n    System.out.println(\"Overridden \" + args[1]);\n  }\n} \n\nAnd the commands: \n\njavac Sub.java \njava Sub 10 20 30 \n\nWhat is the result?',0),(79,'class DBConfiguration {\n	String user;\n	String password;\n} \n\npublic class DBHandler {\n	DBConfiguration configureDB(String uname, String password){\n		// insert code here \n	}\n	public static void main(String[] args) {\n		DBHandler r = new DBHandler();\n		DBConfiguration dbConf = r.configureDB(\"manager\",\"manager\");\n	} \n} \n\nWhich code fragment must be inserted at line 6 to enable the code to compile? \n',0),(80,'Given: \n\npublic class Test {\n	int sum = 0;\n	public void doCheck(int number) {\n		if(number % 2 == 0){\n			break;\n		} else {\n			for (int i = 0; i < number; i++) {\n				sum += 1;\n			}\n		}\n	}\n	public static void main(String[] args) {\n		Test obj = new Test();\n		System.out.println(\"Red \" + obj.sum);\n		obj.doCheck(2);\n		System.out.println(\"Orange \" + obj.sum);\n		obj.doCheck(3);\n		System.out.println(\"Green \" + obj.sum);\n	}\n} \n\nWhat is the result? ',0),(81,'Given the classes:\n\n* AssertionError\n* ArithmeticException\n* ArrayIndexOutOfBoundsException\n* FileNotFoundException\n* IllegalArgumentException\n* IOError\n* IOException\n* NumberFormatException\n* SQLException\n\nWhich option lists only those classes that belongs to the unchecked exception category?',0),(82,'Given code fragment: \n\nString color = \"teal\";\nswitch(color){\n	case \"Red\":\n		System.out.println(\"Found Red\");\n	case \"Blue\":\n		System.out.println(\"Found Blue\");break;\n	case \"Teal\":\n		System.out.println(\"Found Teal\");break;\n	default:\n		System.out.println(\"Found Default\");\n} ',0),(83,'Which declaration initializes a boolean variable?',0),(84,'Given:\n\npublic class Msg {\n    public static String doMsg(char x) {\n        return \"Good Day!\";\n    }\n    public static String doMsg(int y) {\n        return \"Good Luck!\";\n    }    \n    public static void main(String[] args) {\n        char x = 8;\n        int z = \'8\';\n        System.out.println(doMsg(x));\n        System.out.println(doMsg(z));\n    }\n}\n\nWhat is the result?',0),(85,'Given: \n\nclass App {\n    public static void main(String[] args) {\n        char[] arr = {\n            \'A\', \'e\', \'I\', \'O\', \'u\'\n        };\n        int count = 0;\n        for (int i = 0; i < arr.length; i++) {\n            switch (arr[i]) {\n            case \'A\':\n                continue;\n            case \'a\':\n                count++;\n                break;\n            case \'E\':\n                count++;\n                break;\n            case \"I\":\n                count++;\n                continue;\n            case \'O\':\n                count++;\n                break;\n            case \'U\':\n                count++;\n            }\n        }\n        System.out.print(\"Total match found: \" + count);\n    } \n} \n\nWhat is the result?',0),(86,'Given:\n\npublic class Test1 {\n    static void doubling(Integer ref, int pv) {\n        ref = 20;\n        pv = 20;\n    }\n    public static void main(String[] args) {\n        Integer iObj = new Integer(10);\n        int iVar = 10;\n        doubling(iObj++, iVar++);\n        System.out.println(iObj + \",\" + iVar);\n    }\n}\n\nWhat is the result?',0),(87,'Given:\n\npublic class Basic {\n   private static int letter;\n   public static int getLetter();\n   public static void main(String[] args) {\n      System.out.println(getLetter());\n   }\n}\n\nWhy will the code not compile?',0),(88,'Given:\nclass Overloading {\n   int x(double d) {\n      System.out.println(\"one\");\n      return 0;\n   }\n   String x(double d) {\n      System.out.println(\"two\");\n      return null;\n   }\n   double x(double d) {\n      System.out.println(\"three\");\n      return 0.0;\n   }\n   public static void main(String[] args) {\n      new Overloading().x(4.0);\n   }\n}',0),(89,'Given: \nclass X{\n   String str = \"default\";\n   int value = 17;\n   X(String s){\n        str = s;\n   }\n   X (int i) {\n       value = i;\n   }\n   void print() {\n       System.out.println(str + \" \" + value);\n   }\n   public static void main(String[] args){\n      new X(\"hello\").print();\n      new X(92).print();\n   } \n} ',0),(90,'Given: \n\nclass X {\n	public void mX() { \n	System.out.println(\"Xm1\");\n	}\n}\nclass Y extends X {\n	public void mX() {\n		System.out.println(\"Xm2\");\n	}\n	public void mY() {\n		System.out.println(\"Ym\");\n	}\n}\npublic class Test {\n	public static void main(String[] args) {\n		X xRef = new Y();\n		Y yRef = (Y) xRef;\n		yRef.mY();\n		xRef.mX();\n	}\n} \n\nWhat is the result? ',0),(91,'Given:\n\nclass Mid\n {\n    public int findMid(int n1, int n2) {\n        return (n1 + n2) / 2;\n    }\n}\npublic class Calc extends Mid {\n    public static void main(String[] args) {\n        int n1 = 22, n2 = 2;\n        // insert code here\n        System.out.print(n3);\n    }\n}\n\nWhich two code fragments, when inserted at // insert code here, enable the code to compile and print 12?',0),(92,'Given: \n\npublic class Test2 {\n	public static void main(String[] args) {\n		int ar1[] = {2, 4, 6, 8};\n		int ar2[] = {1, 3, 5, 7, 9};\n		ar2 = ar1;\n		for (int e2 : ar2) {\n			System.out.print(\" \" + e2);\n		}\n	}\n} \n\nWhat is the result? ',0),(93,'Given: \n\ninterface Pet { }\nclass Dog implements Pet { }\npublic class Beagle extends Dog { } \n\nWhich three are valid?',0),(94,'Which four statements are true regarding exception handling in java?',0),(95,'Given:\n\npublic class Circle {\n   double radius;\n   public double area;\n   public Circle (double r) { radius = r; }\n   public double getRadius() { return radius; }\n   public void setRadius(double r) { radius = r; }\n   public double getArea() { return /* ??? */; }\n}\n\nclass App {\n   public static void main(String[] args) {\n      Circle c1 = new Circle(17.4);\n      c1.area = Math.PI * c1.getRadius() * c1.getRadius();\n   }\n}\n\nThis class is poorly encapsulated. You need to change the circle class to compute and return the area\ninstead.\n\nWhat three modifications are necessary to ensure that the class is being properly encapsulated?',0),(96,'Given:\n\nimport java.util.*;\npublic class Ref {\n    public static void main(String[] args) {\n        StringBuilder s1 = new StringBuilder();\n        String s2 = s1.toString();\n        List<String> lst = new ArrayList<String>();\n        lst.add(s2);\n        System.out.println(s1.getClass());\n        System.out.println(s2.getClass());\n        System.out.println(lst.getClass());\n    }\n}\n\nWhat is the result?',0),(97,'Which two items can legally be contained within a java class declaration?',0),(98,'Given code fragment: \n\n// insert code here \narr[0] = new int[3];\narr[0][0] = 1;\narr[0][1] = 2;\narr[0][2] = 3;\narr[1] = new int[4];\narr[1][0] = 10;\narr[1][1] = 20;\narr[1][2] = 30;\narr[1][3] = 40; \n\nWhich two statements, when inserted independently at line //',0),(99,'Given: \n\nclass MySearch {\n    public static void main(String[] args) {\n        String url = \"http://www.domain.com/index.html\";\n        if (XXXX) {\n            System.out.println(\"Found\");\n        }\n    } \n} \n\nWhich code fragment, replace XXXX, enables the code to print Found? ',0),(100,'Given code fragment:\n\nStringBuilder sb = new StringBuilder();\nString h1 = \"HelloWorld\";\nsb.append(\"Hello\").append(\"World\");\n\nif (h1 == sb.toString()) {\n   System.out.println(\"They match\");\n}\nif (h1.equals(sb.toString())) {\n   System.out.println(\"They really match\");\n}',0),(101,'Given:\n\npublic class ComputeSum {\n    public int x;\n    public int y;\n    public int sum;\n    public ComputeSum(int nx, int ny) {\n        x = nx; y = ny;\n        updateSum();\n    }\n    public void setX(int nx) { x = nx; updateSum(); }\n    public void setY(int ny) { y = ny; updateSum(); }\n    void updateSum() {sum = x + y; }\n}\n\nThis class needs to protect an invariant on the sum field.\nWhich three members must have the private access modifier to ensure that this invariant is maintained?',0),(102,'Given: \n\npublic class MyFor1 {\n\n	public static void main(String[ ] args) {\n		int[ ] x = {6, 7, 8};\n		for (int i: x) {\n			System.out.println(i + \" \");i++;\n		}\n	}\n}',0),(103,'The catch clause argument is always of type ______.',0),(104,'Given the fragments:\n\npublic class TestA extends Root {\n    public static void main(String[] args) {\n        Root r = new TestA();\n        System.out.println(r.method1());     // line n1\n        System.out.println(r.method2());     // line n2\n    }\n}\nclass Root {\n    private static final int MAX = 20000;\n    private int method1() {\n        int a = 100 + MAX;                    // line n3\n        return a;\n    }\n    protected int method2() {\n        int a = 200 + MAX;                    // line n4\n        return a;\n    }\n}\n\nWhich line causes compilation error?',0),(105,'Given the code fragment: \n\nclass Lang {\n    private String category = \"procedura1\";\n    public static void main(String[] args) {\n        Lang obj1 = new Lang();\n        Lang obj2 = new Lang();\n        if (obj1.category == obj2.category) {\n            System.out.println(\"Equal\");\n        } else {\n            System.out.println(\"Not equal\");\n        }\n        if (obj1.category.equals(obj2.category)) {\n            System.out.println(\"Equal\");\n        } else {\n            System.out.println(\"Not equal\");\n        }\n    } \n} \n\nWhat is the result?',0),(106,'Given:\n\npublic class Case {\n\n    public static void main(String[ ] args) {\n        String product = \"Pen\";\n        product.toLowerCase();\n        product.concat(\" BOX\".toLowerCase());\n        System.out.print(product.substring(4,6));\n    }\n}\n\nWhich is the result?',0),(107,'Given the following four Java file definitions:\n\n// Foo.java\npackage facades;\npublic interface Foo { }\n\n// Boo.java\npackage facades;\npublic interface Boo extends Foo { }\n\n// Woofy.java\npackage org.domain;\n// line n1\npublic class Woofy implements Boo, Foo { }\n\n// Test.java\npackage org;\n// line n2\npublic class Test {\n   public static void main(String[] args) {\n      Foo obj = new Woofy();\n   }\n}\n\nWhich set modifications enable the code to compile?',0),(108,'Given the following code:\n\n1. public class Simple {\n2.    public float price;\n3.    public static void main(String[ ] args) {\n4.       Simple price = new Simple();\n5.       price = 4;\n6.    }\n7. }\n\nWhat will make this code compile and run?',0),(109,'Given: \n\npublic class Test {\n  public static void main(String[] args) {\n    int ax = 10, az= 30;\n    int aw= 1, ay= 1;\n    try {\n      aw= ax % 2;\n      ay= az / aw;\n    } catch (ArithmeticException e1) {\n      System.out.println(\"Invalid Divisor.\");\n    } catch (Exception e2) {\n        aw= 1;\n        System.out.println(\"Divisor changed\");\n    }\n    ay=az /aw; //line14 \n    System.out.println(\"Successful Division \" + ay);\n  }\n} \n\nWhat is the result?',0),(110,'Given: \n\npublic class Calculator {\n\n	public static void main(String[ ] args) {\n		int num = 5;\n		int sum; \n\n		do {\n			sum += num;\n		} while ((num--) > 1); \n\n		System.out.println(\"The sum is \" + sum + \".\");\n	}\n} \n',0),(111,'Given:\n\npublic class DoWhile1 {\n\n   public static void main(String[ ] args) {\n      int ii = 2;\n      do {\n         System.out.println(ii);\n      } while (--ii);\n   }\n}\n\nWhat is the result?',0),(112,'Given the code fragment:    \n\npublic static void main(String[] args) {\n        int x = 353;\n        int j = x++;\n        switch (j) {\n            case 317:\n            case 353:\n            case 367:\n                System.out.println(\"Is a prime number.\");\n            case 353:\n            case 363:\n                System.out.println(\"Is a palindrome.\");\n                break;\n            default:\n                System.out.println(\"Invalid value.\");\n        }\n    } \n\nWhat is the result?',0),(113,'Which two are valid instantiations and initialsisations of a multi dimensional array?',0),(114,'Given the code fragments:\n\ninterface Contract{ }\nclass Super implements Contract{ }\nclass Sub extends Super {}\n\npublic class Ref {\n    public static void main(String[] args) {\n        List objs = new ArrayList();\n\n        Contract c1 = new Super();\n        Contract c2 = new Sub();        // line n1\n        Super s1 = new Sub();\n\n        objs.add(c1);\n        objs.add(c2);\n        objs.add(s1);                    // line n2\n       \n         for(Object itm: objs) {\n            System.out.println(itm.getClass().getName());\n        }\n    }\n}\n\nWhat is the result?',0),(115,'Given: \n\npackage p1;\npublic interface DoInterface {\n	void m1(int n); // line n1 \n	public void m2(int n);\n} \n\npackage p3;\nimport p1.DoInterface;\npublic class DoClass implements DoInterface{\n	int x1, x2;\n	DoClass() {\n		this.x1 = 0;\n		this.x2 = 10;\n	}\n	public void m1 (int p1) { x1 += p1; System.out.println(x1); } // line n2 \n	public void m2 (int p1) { x2 += p1; System.out.println(x2); }\n} \n\npackage p2;\nimport p1.*;\nimport p3.*;\npublic class Test {\n	public static void main(String[] args) {\n		DoInterface doi= new DoClass(); // line n3 \n		doi.method1(100);\n		doi.method2(200);\n	}\n} \n\nWhat is the result? \n',0),(116,'Given the code fragment: \n\npublic class Test {\n  public static void main(String[] args) {\n    for (int ii= 0; ii< 3; ii++) {\n      int count = 0;\n      for (int jj = 3; jj >0; jj--) {\n	if (ii== jj) {\n	  ++count;\n	  break;\n	}\n      }\n      System.out.print(count);\n      continue;\n    }\n  }\n} \n\nWhat is the result?',0),(117,'You are writing a method that is declared not to return a value. Which two are permitted in the method\nbody?',0),(118,'Given: \n\npublic class SuperTest {\n    public static void main(String[] args) {\n        // statement 1\n        // statement 2\n        // statement 3\n    }\n}\nclass Shape {\n    public Shape() {\n        System.out.println(\"Shape: constructor\");\n    }\n    public void foo() {\n        System.out.println(\"Shape: foo\");\n    }\n}\nclass Square extends Shape {\n    public Square() {\n        super();\n    }\n    public Square(String label) {\n        System.out.println(\"Square: constructor\");\n    }\n    public void foo() {\n        super.foo();\n    }\n    public void foo(String label) {\n        System.out.println(\"Square: foo\");\n    }\n}\n\nWhat should statement1, statement2 and statement3 be respectively, in order to produce the result?\n\nShape: constructor\nSquare: foo\nShape: foo\n\n',0),(119,'Given:\n\nclass Star {\n    public void doStuff() {\n        System.out.println(\"Twinkling Star\");\n    }\n}\ninterface Universe {\n    public void doStuff();\n}\nclass Sun extends Star implements Universe {\n    public void doStuff() {\n        System.out.println(\"Shining Sun\");\n    }\n}\npublic class Bob {\n    public static void main(String[] args) {\n        Sun obj2 = new Sun();\n        Star obj3 = obj2;\n        ((Sun) obj3).doStuff();\n        ((Star) obj2).doStuff();\n        ((Universe) obj2).doStuff();\n    }\n}\n\nWhat is the result?',0),(120,'An unchecked exception occurs in a method dosomething().\n\nShould other code be added in the dosomething() method for it to compile and execute?\n',0),(121,'Given the code fragment: \n\nboolean log1 = (1 < 9) && (1 > 5); \nboolean log2 = (3 == 4) || (3 == 3); \nSystem.out.println(\"log1: \" + log1 + \"\\nlog2: \" + log2); \n\nWhat is the result? ',0),(122,'Identify tow benefits of using ArrayList over array in software development.',0),(123,'Given the code fragment:\n1. ArrayList<Integer> list = new ArrayList<>(1);\n2. list.add(1001);\n3. list.add(1002);\n4. System.out.println(list.get(list.size()));\nWhat is the result?\n\n',0),(124,'Given the code fragment: \n\nclass Student {\n  int rollnumber;\n  String name;\n  List cources = new ArrayList();\n  // insert code here \n  public String toString() {\n    return rollnumber + \" : \" + name + \" : \" + cources;\n  }\n} \n\nAnd \n\npublic class Test {\n  public static void main(String[] args) {\n    List cs = new ArrayList();\n    cs.add(\"Java\");\n    cs.add(\"C\");\n    Student s = new Student(123, \"Fred\", cs);\n    System.out.println(s); \n  }\n} \n\nWhich code fragment, when inserted at line // insert code here, \nenables class Test to print 123?',0),(125,'Given:\n\npublic class Marklist {\n\n    int num;\n    public static void main(String[ ] args) {\n        public static void graceMarks(Marklist obj4) {\n            obj4.num += 10;\n        }\n        public static void main(String[ ] args) {\n\n            Marklist obj1 = new Marklist();\n            Marklist obj2 = obj1;\n            Marklist obj3 = null;\n            obj2.num = 60;\n            graceMarks(obj2);\n        }\n    }\n}\n\nHow many objects are created in the memory runtime?',0),(126,'Given: \n\nclass X {\n    static void m(String s1) {\n        s1 = \"acting\";\n    }\n    public static void main(String[] args) {\n        String s2 = \"action\";\n        m(s2);\n        System.out.println(s2);\n    } \n} \n\nWhat is the result?',0),(127,'Which three are valid types for switch?',0),(128,'Given: \n\npublic class TestTry {\n	public static void main(String[] args) {\n		StringBuilder message = new StringBuilder(\"hello java!\");\n		int pos = 0;\n		try {\n			for ( pos = 0; pos <12; pos++) {\n				switch(message.charAt(pos)) {\n				case \'a\': \n				case \'b\': \n				case \'c\':\n					String uc=Character.toString(message.charAt(pos)).toUpperCase();\n					message.replace(pos, pos+1, uc);\n				}\n			}\n		}catch (Exception e) {\n			System.out.println(\"Out of limits\"); \n		}\n		System.out.println(message);\n	}\n} ',0),(129,'Given the code fragment: \n\npublic class ForTest {\n  public static void main(String[] args) {\n    int[] array = {1, 2, 3};\n    for(foo) { \n    }\n  }\n} \n\nWhich three code fragments, when replaced individually for foo, \nenables the program to compile?',0),(130,'Given:\n\nclass Cake {\n    int model;\n    String flavor;\n    Cake() {\n        model = 0;\n        flavor = \"Unknown\";\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Cake c = new Cake();\n        bake1(c);\n        System.out.println(c.model + \" \" + c.flavor);\n        bake2(c);\n        System.out.println(c.model + \" \" + c.flavor);\n    }\n    public static Cake bake1(Cake c) {\n        c.flavor = \"Strawberry\";\n        c.model = 1200;\n        return c;        \n    }\n    public static void bake2(Cake c) {\n        c.flavor = \"Chocolate\";\n        c.model = 1230;\n        return;\n    }\n}\n\nWhat is the result?',0),(131,'Given:\n\npublic class MyFive {\n   public static void main(String[] args) {\n      short ii;\n      short jj = 0;\n      for (ii = kk; ii > 6; ii -=1) {      // line x\n         jj++;\n      }\n      System.out.println(\"jj = \" + jj);\n   }\n}\n\nWhat value should replace kk in line x to cause jj = 5 to be output?',0),(132,'Given the code fragment:\n\nfor (int row = 4; row > 0; row--) {\n    int col = row;\n    while (col <= 4) {\n        System.out.print(col);\n        col++;\n    }\n    System.out.println(); \n} \n\nWhat is the result? ',0),(133,'View the Exhibit.\npublic class Hat {\n   public int ID = 0;\n   public String name = \"hat\";\n   public String size = \"One Size Fit All\";\n   public String color = \"\";\n   public String getName() { return name; }\n   public void setName(String name) {\n      this.name = name;\n   }\n}\nGiven:\npublic class TestHat {\n   public static void main(String[] args) {\n      Hat blackCowboyHat = new Hat();\n   }\n}\nWhich statement sets the name of the Hat instance?',0),(134,'Given the code fragment:\n\nint b = 4;\nb--;\nSystem.out.println(--b);\nSystem.out.println(b);\n\nWhat is the result?',0),(135,'Given: \n\npublic class App {\n\n	public static void main(String[ ] args) {\n		int i = 10;\n		int j =20;\n		int k = j += i / 5;\n		System.out.println(i +\" : \" + j + \" : \" + k);\n	}\n} \n\nWhat is the result? ',0),(136,'public class Two {\n    public static void main(String[] args) {\n      try {\n         doStuff();\n         System.out.println(\"1\");\n      }\n      catch (Exception e){\n         System.out.println(\"2\");\n      }\n   }\n    public static void doStuff() {\n      if(Math.random() > 0.5) throw new RuntimeException(); doMoreStuff();\n      System.out.println(\"3\");\n   }\n    public static void doMoreStuff() {\n        System.out.println(\"4\");\n    }\n}\nWhich two are possible outputs?',0),(137,'Given: \n\npublic class Test3 {\n    public static void main(String[] args) {\n        double[] array = {\n            10, 20.33, \'c\', 300.f\n        };\n        for (double d : array) {\n            d = d + 10;\n            System.out.print(d + \" \");\n        }        \n    } \n} \n\nWhat is the result?',0),(138,'Given the code fragment:\n\nBoolean b1 = true;\n\nBoolean b2 = false;\n\nint i = 0;\n\nwhile(foo){ }\n\nWhich one is valid as a replacement for foo?',0),(139,'Given: \n\nabstract class A1 {\n  public abstract void m1();\n  public void m2() {\n    System.out.println(\"Green\");\n  }\n}\nabstract class A2 extends A1 { \n  public abstract void m3();\n  public void m1() {\n    System.out.println(\"Cyan\");\n  }\n  public void m2() {\n    System.out.println(\"Blue\");\n  }\n}\npublic class A3 extends A2 {\n  public void m1() {\n    System.out.println(\"Yellow\");\n  }\n  public void m2() {\n    System.out.println(\"Pink\");\n  }\n  public void m3() {\n    System.out.println(\"Red\");\n  }\n  public static void main(String[] args) {\n    A2 tp = new A3();\n    tp.m1();\n    tp.m2();\n    tp.m3();\n  }\n} \n\nWhat is the result?',0),(140,'Given:\n\npublic class Painting {\n    private String type;\n    public String getType() {\n        return type;\n    }\n    public void setType(String type) {\n        this.type = type;\n    }\n    public static void main(String[] args) {\n        Painting obj1 = new Painting();\n        Painting obj2 = new Painting();\n        obj1.setType(null);\n        obj2.setType(\"Fresco\");\n        System.out.print(obj1.getType() + \" : \" + obj2.getType());\n    }\n}\n\nWhat is the result?',0),(141,'Given: \n\npublic class VarScope {\n    public static void main(String[] args) {\n        String color = \"red\";\n        int qty = 10;\n        if (color.equals(\"red\")) {        // line n1\n            int amount = qty * 10;\n        } else if (color.equals(\"green\")) {\n            int amount = qty * 15;        // line n2\n        } else if (color.equals(\"blue\")) {\n            int amount = qty * 5;        // line n3\n        }\n        System.out.print(amount);        // line n4\n    } \n} \n\nWhich line causes a compilation error? ',0),(142,'Given code fragment:\n\ninterface SampleCloseable {\n    public void close() throws java.io.IOException;    \n}\n\nWhich three implementations are valid?\n\n',0),(143,'Which two statements correctly describe checked exception?',0),(144,'Given:\n\npublic class SuperTest {\n   public static void main(String[] args) {\n      statement1\n      statement2\n      statement3\n   }\n}\nclass Shape {\n   public Shape() {\n      System.out.println(\"Shape: constructor\");\n   }\n   public void foo() {\n      System.out.println(\"Shape: foo\");\n   }\n}\nclass Square extends Shape {\n   public Square() {\n      super();\n   }\n   public Square(String label) {\n      System.out.println(\"Square: constructor\");\n   }\n   public void foo() {\n      super.foo();\n   }\n   public void foo(String label) {\n      System.out.println(\"Square: foo\");\n   }\n}\n\nWhat should statement1, statement2 and statement3 be respectively in order to produce the result?\n\nShape: constructor\nSquare: foo\nShape: foo',0),(145,'Given the code fragment: \n\n	int[] lst ={1, 2, 3, 4, 5, 4, 3, 2, 1};\n	int sum = 0;\n	for (int frnt = 0; rear = lst.length -1; frnt < 5 && rear >= 5; frnt++, rear--){\n		sum = sum + lst[frnt] + lst[rear];\n	}\n	System.out.println(sum); \n\nWhat is the result? ',0),(146,'Given:\npublic class MyFor {\n   public static void main(String[] args) {\n      for (int ii = 0; ii < 4; ii++) {\n         System.out.println(\"ii = \" + ii);\n         ii = ii + 1;\n      }\n   }\n}\nWhat is the result?\nA. ii = 0\nii = 2\nB. ii = 0\nii = 1\nii = 2\nii = 3\nC. ii =\nD. Compilation fails',0),(147,'Given: \n\npublic class Test {\n    public static void main(String[] args) {\n        int i = 1;\n        do {\n            if (i % 2 == 0) continue;\n            if (i == 5) break;\n            System.out.print(i + \"\\t\");\n        } while (true);\n    } \n}\n\nWhat is the result? ',0),(148,'Given:\n\nclass Base {\n    // insert code here\n}\npublic class Derived extends Base {\n    public static void main(String[] args) {\n        Derived obj = new Derived();\n        obj.setNum(3);\n        System.out.println(\"Square = \" + obj.getNum() * obj.getNum());\n    }\n}\n\nWhich two options, when inserted independently inside class Base, ensure that the class is being properly\nencapsulated and allow the program to execute and print the square of the number?',0),(149,'Given the code fragment:\n\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"SE\");\n        list.add(\"EE\");\n        list.add(\"ME\");\n        list.add(\"SE\");\n        list.add(\"EE\");\n\n        list.remove(\"SE\");\n\n        System.out.println(\"Values are : \" + list);\n    }\n\nWhat is the result?',0),(150,'Given: \n\npublic class X{\n	public static void main(String[] args){\n		String theString = \"Hello World\";\n		System.out.println(theString.charAt(11));\n	}\n} \n\nWhat is the result? ',0),(151,'Given the code fragment:\n\nint[][] array = {{0},{0,1},{0,2,4},{0,3,6,9},{0,4,8,12,16}};\n\nSystem.out.println(array[4][1]);\nSystem.out.println(array[1][4]);\n\nWhat is the result?',0),(152,'Given:\n\nPublic Class Test {\n\n}\n\nWhich two packages are automatically imported into the java source file by the java compiler?',0),(153,'Given: \n\npublic class ColorTest {\n  public static void main(String[] args) {\n    String[] colors = {\"red\", \"blue\", \"green\", \"maroon\", \"cyan\"};\n    int count = 0;\n    for (String c : colors) {\n      if (count >= 4) {\n	break;\n      }\n      else {\n        continue;\n      }\n      if (c.length() >= 4) {\n	colors[count] = c.substring(0, 3);\n      }\n      count++;\n    }\n    System.out.println(colors[count]);\n  }\n} \n\nWhat is the result?',0),(154,'Given:\n\npublic class Test {\n    public static void main(String[] args) {\n          int arr[ ] = new int[4];\n          arr[0] = 1;\n          arr[1] = 2;\n          arr[2] = 4;\n          arr[3] = 5;\n          int sum = 0;\n          try {\n              for (int pos = 0; pos <= 4; pos++) {\n                  sum = sum + arr[pos];\n              }\n          } catch (Exception e) {\n              System.out.println(\"Invalid index\");\n          }\n          System.out.println(sum);\n    }\n}\n\nWhat is the result?\n',0),(155,'Given:\n\nabstract class X {\n    public abstract void methodX();\n}\ninterface Y{\n    public void methodY();\n}\n\nWhich two code fragments are valid?',0),(156,'Given:\n\npublic class X implements Z {\n   public String toString() { return \"I am X\"; }\n   public static void main(String[] args) {\n      Y myY = new Y();\n      X myX = myY;\n      Z myZ = myX;\n      System.out.println(myZ);\n   }\n}\nclass Y extends X {\n   public String toString() { return \"I am Y\"; }\n}\ninterface Z { }\n\nWhat is the reference of myZ and what is the type of the object it references?',0),(157,'Given the code fragment:\nint[ ][ ] array2d = new int[2][3];\nSystem.out.println(\"Loading the Data\");\nfor ( int x = 0; x < array2d.length; x++) {\n   for ( int y = 0; y < array2d[0].length; y++) {\n      System.out.println(\" x = \" + x);\n      System.out.println(\" y = \" + y);\n      // insert load statement here.\n   }\n}\nSystem.out.println(\"Modify the date. \");\nfor ( int x = 0; x < array2d.length; x++) {\n   for ( int y = 0; y < array2d[0].length; y++) {\n      System.out.println(\" x = \" + x);\n      System.out.println(\" y = \" + y);\n      // insert modify statement here.\n   }\n}\nWhich pair of load and modify statement should be inserted in the code?',0),(158,'Given:\n\npublic class DoCompare1{\n   public static void main(String[] args){\n      String[] table = {\"aa\", \"bb\", \"cc\"};\n      for( String ss: table){\n         int ii = 0;\n         while(ii < table.length){\n            System.out.println(ss + \", \" + ii);\n            ii++;\n         }\n      }\n   }\n}\n\nHow many times is 2 printed as a part of the output?',0),(159,'Which two statements are true for a two-dimensional array of primitive data type? ',0),(160,'Which two actions will improve the encapsulation of a class?',0),(161,'Given: \n\npublic class Test {\n    public static void main(String[] args) {\n        int i = 25;\n        int j = i+++1;\n        if (j % 5 == 0) {\n            System.out.println(j + \" is divisible by 5\");\n        } else {\n            System.out.println(j + \" is divisible by 5\");\n        }        \n	    System.out.println(\"Done\");\n    } \n} \n\nWhat is the result? ',0),(162,'Given:\n\npublic class Test {\n   public static void main(String[] args) {\n      AnotherSampleClass asc = new AnotherSampleClass();\n      SampleClass sc = new SampleClass();\n      sc = asc;\n      System.out.println(\"sc: \" + sc.getClass());\n      System.out.println(\"asc: \" + asc.getClass());\n   }\n}\nclass SampleClass { }\nclass AnotherSampleClass extends SampleClass {\n}\n\nWhat is the result?',0),(163,'Given: \n\nclass App {\n\n  // insert code here \n\n    System.out.println(\"Welcome to the world of Java\");\n  }\n}\n\nWhich two code fragments, when inserted independently at line // insert code here, \nenable the programm to execute and print Welcome message on the screen?',0),(164,'Given:\n\npublic class Vowel {\n    private char var;\n    public static void main(String[] args) {\n        char var1 = \'a\';\n        char var2 = var1;\n        var2 = \'e\';\n\n        Vowel obj1 = new Vowel();\n        Vowel obj2 = obj1;\n        obj1.var = \'i\';\n        obj2.var = \'o\';\n\n        System.out.println(var1 + \", \" + var2);\n        System.out.println(obj1.var + \", \" + obj2.var);\n    }\n}\n\nWhat is the result?',0),(165,'Given the code fragment: \n\nString[] colors = { \"red\", \"blue\", \"green\", \"yellow\", \"maroon\", \"cyan\" }; \n\nWhich code fragment prints blue, cyan, ? ',0),(166,'Given:\n\npublic class DoBreak1{\n   public static void main(String[] args) {\n      String[] table = {\"aa\", \"bb\", \"cc\", \"dd\"};\n      for(String ss : table) {\n         if (\"bb\".equals(ss)) {\n            continue;\n         }\n         System.out.println(ss);\n         if (\"cc\".equals(ss)) {\n            break;\n         }   \n      }\n   }\n}\nWhat is the result?',0),(167,'Given code fragment:\n\npublic static void main(String[] args) {\n   String[] table = {\"aa\", \"bb\", \"cc\"};\n   for (String ss: table) {\n      int ii = 0;\n      while(ii < table.length) {\n         System.out.println(ii);\n         ii++;\n         break;\n      }\n   }\n}\n\nHow many times is 2 printed?',0),(168,'Given:\n\npublic class Circle {\n    double radius;\n    public double area;\n    public Circle(double r) { radius = r; }\n    public double getRadius() { return radius; }\n    public void setRadius(double r) { radius = r; }\n    public double getArea() { return /* ??? */;\n }\n}\n\nclass App {\n    public static void main(String[] args) {\n        Circle c1 = new Circle(17.4\n;)\n        c1.area = Math.PI * c1.getRadius() * c1.getRadius();\n    }\n}\n\nThe class is poorly encapsulated. You need to change the circle class to compute and return the area\ninstead.\n\nWhich two modifications are necessary to ensure that the class is being properly encapsulated?',0),(169,'Given:\nimport java.io.IOException;\npublic class Y {\n    public static void main(String[] args) {\n        try{\n            doSomething();\n        }\n        catch (RuntimeException e){\n            System.out.println(e);\n        }\n    }\n    static void doSomething(){\n        if (Math.random() > 0.5) throw new IOException();\n        throw new RuntimeException();\n    }    \n}\nWhich two action indenpendently, will permitt this class to compile?',0),(170,'Given:\n\npublic class Equal {\n    public static void main(String[] args) {\n        String str1 = \"Java\";\n        String[] str2 = {\"J\", \"a\", \"v\", \"a\"};\n        String str3 = \"\";\n        for (String str : str2) {\n            str3 = str3 + str;\n        }\n        boolean b1 = (str1 == str3);\n        boolean b2 = (str1.equals(str3));\n        System.out.print(b1 + \", \" + b2);\n    }\n}\n\nWhat is the result?',0),(171,'Given:\n\n01  import java.io.Error;\n02  class TestApp {\n03     public static void main(String[] args) {\n04         TestApp t = new TestApp();\n05         try {\n06             t.doPrint();\n07             t.doList();\n08         } catch (Exception e2) {\n09             System.out.println(\"Caught \" + e2);\n10         }\n11     }\n12     public void doList() throws Exception {\n13         throw new Error(\"Error\");\n14     }\n15     public void doPrint() throws Exception {\n16         throw new RuntimeException(\"Exception\");\n17     }\n18 }',0),(172,'Given:\n\npublic class SampleClass {\n   public static void main(String[] args) {\n      SampleClass sc, scA, scB;\n      sc = new SampleClass();\n      scA = new SampleClassA();\n      scB = new SampleClassB();\n      System.out.println(\"Hash is : \" +\n         sc.getHash() + \", \" + scA.getHash() + \", \" + scB.getHash());\n   }\n   public int getHash() {\n      return 111111;\n   }\n}\nclass SampleClassA extends SampleClass {\n   public long getHash() {\n      return 44444444;\n   }\n}\nclass SampleClassB extends SampleClass {\n   public long getHash() {\n      return 999999999;\n   }\n}\n\nWhat is the result?',0),(173,'Given:\n\nclass X{\n   String str = \"default\";\n   X(String s){ str = s; }\n   void print(){ System.out.println(str); }\n   public static void main(String[] args){\n      new X(\"hello\").print();\n   }\n}\nWhat is the result?',0),(174,'Given the code fragment:\n\npublic static void main(String[] args) {\n   int iArray[] = {65, 68, 69};\n   iArray[2] = iArray[0];\n   iArray[0] = iArray[1];\n   iArray[1] = iArray[2];\n   for (int element : iArray) {\n      System.out.print(element + \" \");\n   }\n\nWhat is the result?',0),(175,'01. class StaticMethods { \n02.     static void one() { \n03.         two(); \n04.         StaticMethods.two(); \n05.         three(); \n06.         StaticMethods.four();\n07.     } \n08.     static void two() {} \n09.     void three() { \n10.         one(); \n11.         StaticMethods.two(); \n12.         four(); \n13.         StaticMethods.four(); \n14.     } \n15.     void four() {} \n16. } \n	\n	Which three are illegal? ',0),(176,'Given:\n\n1 public class SampleClass {\n2     public static void main(String[] args) {\n3         AnotherSampleClass asc\n = new AnotherSampleClass();\n4         SampleClass sc\n = new SampleClass();\n5         // insert code here\n6      }\n7 }\n8 class AnotherSampleClass extends SampleClass{\n9 }\n\nWhich statement, when inserted into line 5, is valid?',0),(177,'Given:\n\npublic class TestLoop1 {\n    public static void main(String[] args) {\n        int a = 0, z = 10;\n        while (a < z) {\n            a++;\n            z--;\n        }\n        System.out.print(a + \" : \" + z);\n    }\n}\n\nWhat is the result?',0),(178,'Given:\n\n01 public class TestLoop {\n02     public static void main(String[] args) {\n03         float myarray[] = {10.20f, 20.30f, 30.40f, 50.60f};\n04         int index = 0;\n05         boolean isFound = false;\n06         float key = 30.40f;\n07         // insert code here\n08         System.out.println(isFound);\n09     }\n10 }\n\nWhich code fragment, when inserted at line 7, enables the code print true?',0),(179,'Which is a valid abstract class?\n',0),(180,'Given the code fragment:\n\nif (aVar++ < 10) {\n\n    System.out.println(aVar + \" Hello World!\");\n}else{\n    System.out.println(aVar + \" Hello Universe!\");\n}\n\nWhat is the result if the integer aVar is 9?',0),(181,'Given:\n\nSystem.out.println(\"Result: \" + 2 + 3 + 5);\nSystem.out.println(\"Result: \" + 2 + 3 * 5);\n\nWhat is the result?',0),(182,'Given:\n\npublic class MyClass {\n    public static void main(String[] args) {\n        while (int ii = 0; ii < 2) {\n            ii++;\n            System.out.println(\"ii = \" + ii);\n        }\n    }\n}\n\nWhat is the result?',0),(183,'Given:\n\nTest.java\n\npublic class Test {\n    public static void main(String[] args) {\n        Integer num = Integer.parseInt(args[1]);\n        System.out.println(\"Number is : \" + num);\n    }\n}\n\nAnd the commands:\n\njavac Test,java\n\njava Test 12345\n\nWhat is the result?',0),(184,'View the exhibit:\n\npublic class Student {\n    public String name = \"\";\n    public int age = 0;\n    public String major = \"Undeclared\";\n    public boolean fulltime = true;\n    public void display() {\n        System.out.println(\"Name: \" + name + \" Major: \" + major);\n    }\n    public boolean isFulltime() {\n        return fulltime;\n    }\n}\npublic class TestStudent\n {\n    public static void main(String[] args) {\n        Student bob = new Student();\n        bob.name = \"Bob\";\n        bob.age = 18;\n        bob.year\n = 1982;\n    }\n}\nWhat is the result?',0),(185,'Which code fragment is illegal?',0),(186,'GIven the code fragment:\n\nint a = 0;\na++;\nSystem.out.println(a++);\nSystem.out.println(a);\n\nWhat is the result?',0),(187,'Given:\n\npublic class MyFor3 {\n    public static void main(String[] args) {\n        int[] xx = null;\n        for (int ii : xx) {\n            System.out.println(ii);\n        }\n    }\n}\n\nWhat is the result?\n',0),(188,'Given the code fragment:\n\npublic class Test {\n    public static List data = new ArrayList();\n\n    // insert Code here\n    {\n        for (String x : strs) {\n            data.add(x);\n        }\n        return data;\n    }\n    public static void main(String[] args) {\n        String[] d = {\"a\", \"b\", \"c\"};\n        update(d);\n        for (String s : d) {\n            System.out.print(s + \" \");\n        }\n    }\n}\n\nWhich code fragment, when inserted at\n// insert Code here,\nenables the code to compile and print a b c?',0),(189,'Given the code fragment:\n\nString name = \"Spot\";\nint age = 4;\nString str = \"My dog \" + name + \" is \" + age:\nSystem.out.println(str);\nAnd\nStringBuilder sb = new StringBuilder();\nUsing StringBUilder, which code fragment is the best potion to build and print the following string\nMy dog Spot is 4\n',0),(190,'public class X {\n\n   public static void main(String[\n] args){\n      String theString = \"Hello World\";\n      System.out.println(theString.charAt(11));\n   }\n}\nWhat is the result?',0),(191,'Given the code fragment:\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(28 + 5 <= 4 + 29);\n        System.out.println((28 + 5) <= (4 + 29));\n    }\n}\n\nWhat is the result?',0),(192,'Given:\n\npublic class String1 {\n    public static void main(String[] args) {\n        String s = \"123\";\n        if (s.length() > 2)\n            concat(\"456\");\n        for (int x = 0; x < 3; x++) {\n            s += \"x\";\n            System.out.println(s);\n        }\n    }\n}\n\nWhat is the result?',0),(193,'Given:\npublic class Test3 {\n    public static void main(String[] args) {\n        String names[] = new String[3];\n        names[0] = \"Mary Brown\";\n        names[1] = \"Nancy Red\";\n        names[2] = \"Jessy Orange\";\n        try {\n            for(String n: names){\n                try {\n                    String pwd = n.substring(0, 3)+n.substring(6, 10);\n                    System.out.println(pwd);                    \n                }\n                catch(StringIndexOutOfBoundsException sie){\n                    System.out.println(\"string out of limits\");\n                }\n            }\n        }\n        catch(ArrayIndexOutOfBoundsException e){\n            System.out.println(\"array out of limits\");\n        }\n    }\n}\n\nWhat is the result?\n',0),(194,'class X {\n   X() { }\n   private void one() { }\n}\npublic class Y extends X {\n   Y() { }\n   private void two() { one(); }\n   public static main(String[] args){\n      new Y().two();\n   }\n}\n\nWhat change will make this code to compile? ',0),(195,'Given:\npublic class Main {\n   public static void main(String[] args) {\n      try {\n         doSomething();\n      }\n      catch (SpecialException e) {\n         System.out.println(e);\n      }}\n   static void doSomething() {\n      int[] ages = new int[4];\n      ages[4] = 17;\n      doSomethingElse();\n   }\n   static void doSomethingElse() {\n      throw new SpecialException(\"Thrown at end of doSomething() method\"); }\n}\nWhat is the output?',0),(196,'Given:\n\npublic class Access {\n    private int x = 0;\n    private int y = 0;\n\n    public static void main(String[] args) {\n        Access accApp = new Access();\n        accApp.printThis(1, 2);\n        accApp.printThat(3, 4);\n    }\n    public void printThis(int x, int y) {\n        x = x;\n        y = y;\n        System.out.println(\"x: \" + this.x + \" y: \" + this.y);\n    }\n    public void printThat(int x, int y) {\n        this.x = x;\n        this.y = y;\n        System.out.println(\"x: \" + this.x + \" y: \" + this.y);\n    }\n}\n\nWhat is the result?',0),(197,'Given the code fragment:\n\nfloat x = 22.00f % 3.00f;\nint y = 22 % 3;\nSystem.out.println(x + \", \" + y);\n\nWhat is the result?',0),(198,'Given the code fragment:\n\npublic class Student {\n    String name;\n    int age;\n}\n\nAND,\n\n01 public class Test {\n02     public static void main(String[] args) {\n03        Student s1 = new Student();\n04        Student s2 = new Student();\n05        Student s3 = new Student();\n06        s1 = s3;\n07        s3 = s2;\n08        s2 = null;\n09     }\n10 }\n\nWhich statement is true?',0),(199,'View the exhibit:\n\npublic class Student {\n    public String name = \"\";\n    public int age = 0;\n    public String major = \"Undeclared\";\n    public boolean fulltime = true;\n    public void display() {\n        System.out.println(\"Name: \" + name + \" Major: \" + major);\n    }\n    public boolean isFulltime() {\n        return fulltime;\n    }\n}\nWhich line of code initializes a student instance?',0),(200,'package handy.dandy;\n\npublic class Keystroke {\n    public void typeExclamation(){\n        System.out.println(\"!\");\n    }\n}\n01. package handy;\n02. public class Greet {\n03.     public static void main(String[] args) {        \n04.         String greeting = \"Hello\";\n05.         System.out.println(greeting);\n06.         Keystroke stroke = new Keystroke();\n07.         stroke.typeExclamation();\n08.     }\n09. }\n\nWhat three modifications, made independently, made to class Greet, enable the code to compile and run?',0),(201,'Given:\n\nclass SpecialException extends Exception {\n    public SpecialException(String message) {\n        super(message);\n        System.out.println(message);\n    }\n}\npublic class ExceptionTest {\n    public static void main(String[] args) {\n        try {\n            doSomething();\n        }\n        catch (SpecialException e) {\n            System.out.println(e);\n        }\n    }\n    static void doSomething() throws SpecialException {\n        int[] ages = new int[4];\n        ages[4] = 17;\n        doSomethingElse();\n    }\n    static void doSomethingElse() throws SpecialException {\n        throw new SpecialException(\"Thrown at end of doSomething() method\");\n    }\n}\n\nWhat will be the output?',0),(202,'Which three statements are true about the structure of a Java class?\n',0),(203,'Given:\n\nString message1 = \"Wham bam!\";\nString message2 = new String(\"Wham bam!\");\n\nif(message1 == message2)\n   System.out.println(\"They match\");\nif(message1.equals(message2))\n   System.out.println(\"They really match\");\n\nWhat is the output?',0),(204,'int [ ] array = {1,2,3,4,5};\nfor (int i: array) {\n   if(i < 2) {\n      keyword1;\n   }\n   System.out.println(i);\n   if (i == 3) {\n      keyword2;\n   }\n}}\nWhat should keyword1 and keyword2 be respectively, in order to produce output 2345?\n',0),(205,'Given the code fragment:\n\n  int a = -10;\n  int b = 17;\n  int c = expression1;\n  int d = expression2;\n  c++;\n  d--;\n  System.out.println(c + \", \" + d);\n\nWhat could expression1 and expression2 be, respectively, in order to produce output -8, 16?',0),(206,'Given:\n\nclass MarksOutOfBoundsException extends IndexOutOfBoundsException { }\npublic class GradingProcess {\n    void verify(int marks) throws IndexOutOfBoundsException {\n        if (marks > 100) {\n            throw new MarksOutOfBoundsException();\n        }\n        if (marks > 50) {\n            System.out.print(\"Pass\");\n        }else {\n            System.out.print(\"Fail\");\n        }\n    }\n    public static void main(String[] args) {\n        int marks = Integer.parseInt(args[2]);\n        try {\n            new GradingProcess().verify(marks);\n        } catch (Exception e) {\n            System.out.print(e.getClass());\n        }\n    }\n}\n\nAnd the command line invocation\n\njava GradingProcess 89 50 104\n\nWhat is the result?',0),(207,'Given:\n\npublic class Test2 {\n    public static void doChange(int[] arr) {\n        for(int pos = 0; pos < arr.length; pos++) {\n            arr[pos] = arr[pos] + 1;\n        }\n    }\n    public static void main(String[] args) {\n        int[] arr = {10, 20, 30};\n        doChange(arr);\n        for (int x : arr) {\n            System.out.print(x + \", \");\n        }\n        doChange(arr[0], arr[1], arr[2]);\n        System.out.print(arr[0] + \", \" + arr[1] + \", \" + arr[2]);\n    }\n}\n\nWhat is the result?',0),(208,'Given:\n\npublic class Palindrome {\n    public static void main(String[ ] args) {\n        System.out.println(args[1]);\n        return 0;\n    }\n}\nAnd the commands:\n\njavac Palindrome.java\njava Palindrome Wow Mom\n\nWhat is the result?',0),(209,'Given:\n\nStringBuilder sb = new StringBuilder();        \nsb.append(\"World\");\n\nWhich code fragment prints Hello World?',0),(210,'int i, j = 0;\ni = (3 * 2 + 4 + 5);\nj = (3 * (2 + 4) + 5);\nSystem.out.println(\"i: \" + i + \"\\nj: \" + j);\nWhat is the result?\n\n\n\n\n',0),(211,'Given:\n\n01. public class Speak {\n02.    public static void main(String[] args) {\n03.       Speak speakIt = new Tell();\n04.       Tell tellIt = new Tell();\n05.       speakIt.tellItLikeItIs();\n06.       (Truth)speakIt.tellItLikeItIs();\n07.       ((Truth)speakIt).tellItLikeItIs();\n08.       tellIt.tellItLikeItIs();\n09.       (Truth).tellIt.tellItLikeItIs();\n10.       ((Truth)tellIt).tellItLikeItIs();\n11.    }\n12. }\n13. class Tell extends Speak implements Truth {\n14.    public void tellItLikeItIs() {\n15.       System.out.println(\"Right on!\");\n16.    }\n17. }\n18. interface Truth { public void tellItLikeItIs(); }\n\nWhich three line will compile and output \"right on!\"?',0),(212,'Given:\n\nclass Jump {\n    static String args[] = {\"lazy\", \"lion\", \"is\", \"always\"};\n    public static void main(String[ ] args) {\n        System.out.println(\n            args[1] + \" \" + args[2] + \" \" + args[3] + \" jumping\");\n    }\n}\n\nAnd the commands:\n\njavac Jump.java\njava Jump crazy elephant is always\n\nWhat is the result?',0),(213,'Given code fragment:\n\nString h1 = \"Bob\";\n\nString h2 = new String(\"Bob\");\n\nWhat is the best way to test that the values of h1 and h2 are the same?',0),(214,'boolean log3 = (5.0 != 6.0) && (4 != 5);\nboolean log4 = (4 != 4) || (4 == 4);\nSystem.out.println(\"log3: \" + log3 + \"\\nlog4: \" + log4);\nWhat is the result?\n\n',0),(215,'Which code fragment causes a compilation error?',0),(216,'Which statement will empty the contents of a StringBuilder variable named sb?\n\n',0),(217,'Which two are valid declarations of a two-dimensional array?\nA. int [][] array2D;\nB. int [2][2] array2D;\nC. int array2D [];\nD. int [] array2D [];\nE. int [][] array2D []',0),(218,'Given:\n\nclass Test {\n    public static void main(String[] args) {\n        int numbers[ ];\n        numbers = new int[2];\n        numbers[0] = 10;\n        numbers[1] = 20;\n\n        numbers = new int[4];\n        numbers[2] = 30;\n        numbers[3] = 40;\n        for (int x : numbers) {\n            System.out.print(\" \" + x);\n        }\n    }\n}\n\nWhat is the result?',0),(219,'class StaticField {\n   static int i = 7;\n   public static void main(String[] args) {\n      StaticField obj = new StaticField();\n      obj.i\n++;\n      StaticField.i++;\n      obj.i\n++;\n      System.out.println(StaticField.i + \" \" + obj.i\n);\n   }\n}\nWhat is the result?\n',0),(220,'Given the code fragment:\n\nSystem.out.println(\"Result: \" +3+5);\n\nSystem.out.println(\"Result: \" +(3+5));\nA. \nB. \nC. \nD. ',0),(221,'Given:\n\npublic class Series {\n    public static void main(String[ ] args) {\n        int arr[ ] = {1, 2, 3};\n\n        for (int var : arr) {\n            int i = 1;\n            while ( i <= var) {\n                System.out.println(i++);\n            }\n        }\n    }\n}\n\nWhat is the result?',0),(222,'Which two are valid array declarations?\n\n\n',0),(223,'Given:\n\npublic class Main {\n    public static void main(String[] args) throws Exception{\n        doSomething();\n    }\n    private static void doSomething() throws Exception {\n        System.out.println(\"Before if close\");\n        if (Math.random() > 0.5) {\n            throw new Exception();\n        }\n        System.out.println(\"After if clause\");\n    }\n}\n\nWhich two are possible outputs?',0),(224,'A method doSomething() that has no exception handling code is modifier to trail a method that throws a\nchecked exception.\n\nWhich two modifications, made independently, will allow the program to compile?',0),(225,'Given:\n\nclass Patient {\n    String name;\n    public Patient(String name) {\n        this.name = name;\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        List ps = new ArrayList();\n        Patient p2 = new Patient(\"Mike\");\n        ps.add(p2);\n\n        // insert code here\n\n        if(f >= 0) {\n            System.out.print(\"Mike found\");\n        }\n    }\n}\n\nWhich code fragment, when inserted at line 14, enables the code to print Mike found?',0),(226,'Given:\nclass Overloading {\n   int x ( double d) {\n      System.out.println(\"one\");\n      return 0;\n   }\n   String x (double d) {\n      System.out.println(\"two\");\n      return null;\n   }\n   double x (double d) {\n      System.out.println(\"three\");\n      return 0.0;\n   }\n   public static void main(String[] args) {\n      new Overloading().x(4.0);\n   }\n}\nWhat is the result?\n',0),(227,'Given code fragment:\n        String color = \"Red\";\n        switch (color) {\n           case \"Red\":\n              System.out.println(\"Found Red\");\n           case \"Blue\":\n              System.out.println(\"Found Blue\");\n              break;\n           case \"White\":\n              System.out.println(\"Found White\");\n              break;\n          default:\n              System.out.println(\"Found Default\");\n        }\nWhat is the result?',0),(228,'public class MainMethod {\n   void main() {\n      System.out.println(\"one\");\n   }\n   static void main(String args) {\n      System.out.println(\"two\");\n   }\n   public static void main(String[] args) {\n      System.out.println(\"three\");\n   }\n   void mina(Object[ ] args) {\n      System.out.println(\"four\");\n   }\n}\n',0),(229,'Given:\npublic class ScopeTest {\n   int j, int k;\n   public static vois main(String[] args) {\n      new ScopeTest().doStuff();}\n   void doStuff() {\n      int x = 5;\n      doStuff2();\n      System.out.println(\"x\");\n   }\n   void doStuff2() {\n      int y = 7;\n      System.out.println(\"y\");\n      for(int z = 0; z < 5; z++) {\n         System.out.println(\"z\");\n         System.out.println(\"y\");\n      } \n   }\n}\n\nWhich two items are fields?\n',0),(230,'Which two may precede the word \"class\" in a class declaration?',0),(231,'public class ForTest {\n\n   public static void main(String[] args) {\n      int[ ] array = {1,2,3};\n      for(foo) {\n      }\n   }\n}\nWhich three are valid replacements for foo that the program will compile and run?\n',0),(232,'Which three are bad practices?',0),(233,'Given the code fragment:\nint b = 3;\nif (!(b > 3)) {\n   System.out.print(\"square\");\n}{\n   System.out.print(\"circle\");\n}\nSystem.out.print(\"...\");\nWhat is the result?\n',0),(234,'Given:\n\n05.    // insert code here\n06.       public abstract void bark();\n07.    }\n08.\n09.    // insert code here\n10.       public void bark() {\n11.          System.out.println(\"woof\");\n12.       }\n13.    }\n\nWhat code should be inserted?',0),(235,'What is the proper way to define a method that takes two int values and returns their sum as an int value?\n\n',0),(236,'Given the class definitions:\n\nclass Alpha {\n    public String doStuff(String msg) {\n        return msg;\n    }\n}\nclass Beta extends Alpha {\n    public String doStuff(String msg) {\n        return msg.replace(\'a\', \'e\');\n    }\n}\nclass Gamma extends Beta {\n    public String doStuff(String msg) {\n        return msg.substring(2);\n    }\n}\n\nAnd the code fragment of the main() method:\n\nList<Alpha> strs = new ArrayList<Alpha>();\nstrs.add(new Alpha());\nstrs.add(new Beta());\nstrs.add(new Gamma());\nfor (Alpha t : strs) {\n     System.out.println(t.doStuff(\"Java\"));\n}\n\nWhat is the result?',0),(237,'Given code fragment:\n\nStringBuilder sb = new StringBuilder();\nString h1 = \"HelloWorld\";\nsb.append(\"Hello\").append(\"World\");\n\nif (h1 == sb.toString()) {\n   System.out.println(\"They match\");\n}\nif (h1.equals(sb.toString())) {\n   System.out.println(\"They really match\");\n}',0),(238,'Which two statements are true for a two-dimensional array of primitive data type? ',0),(239,'Given the code fragment:\n\nString name = \"Spot\";\nint age = 4;\nString str = \"My dog \" + name + \" is \" + age:\nSystem.out.println(str);\nAnd\nStringBuilder sb = new StringBuilder();\nUsing StringBUilder, which code fragment is the best potion to build and print the following string\nMy dog Spot is 4\n',0),(240,'Given the code fragment: \n\nSystem.out.println(2 + 4 * 9 -3); // line 21 \nSystem.out.println((2 + 4) * 9 -3); // line 22 \nSystem.out.println(2 + (4 * 9) -3); // line 23 \nSystem.out.println(2 + 4 * (9 -3)); // line 24 \nSystem.out.println((2 + 4 * 9) -3); // line 25 \n\nIn which line is the highest result?',0),(241,'Given: \n\nclass App {\n    public static void main(String[] args) {\n        char[] arr = {\n            \'A\', \'e\', \'I\', \'O\', \'u\'\n        };\n        int count = 0;\n        for (int i = 0; i < arr.length; i++) {\n            switch (arr[i]) {\n            case \'A\':\n                continue;\n            case \'a\':\n                count++;\n                break;\n            case \'E\':\n                count++;\n                break;\n            case \'I\':\n                count++;\n                continue;\n            case \'O\':\n                count++;\n                break;\n            case \'U\':\n                count++;\n            }\n        }\n        System.out.print(\"Total match found: \" + count);\n    } \n} \n\nWhat is the result?',0),(242,'Given:\n\nimport java.util.*;\npublic class Ref {\n    public static void main(String[] args) {\n        StringBuilder s1 = new StringBuilder();\n        String s2 = s1.toString();\n        List<String> lst = new ArrayList<String>();\n        lst.add(s2);\n        System.out.println(s1.getClass());\n        System.out.println(s2.getClass());\n        System.out.println(lst.getClass());\n    }\n}\n\nWhat is the result?',0),(243,'Given the code fragment:\n\nSystem.out.println(\"Result: \" +3+5);\n\nSystem.out.println(\"Result: \" +(3+5));\n\nWhat is the result?',0),(244,'View the exhibit:\npublic class Student {\n    public String name = \"\";\n    public int age = 0;\n    public String major = \"undeclared\";\n    public boolean fulltime = true;\n    public void display(){\n        System.out.println(\"Name: \" + name + \" Major: \" + major);\n    }\n    public boolean isFulltime(){\n        return fulltime;\n    }\n}\npublic class TestStudent {\n    public static void main(String[] args) {\n        Student bob = new Student();\n        Student jian = new Student();\n        bob.name = \"Bob\";\n        bob.age = 19;\n        jian = bob;\n        jian.name = \"Jian\";\n        System.out.println(\"Bob\'s Name: \" + bob.name);\n    }\n}\nWhat is the result when this program is executed?',0),(245,'Which three statements are benefits of encapsulation? ',0),(246,'Which code fragment is illegal?',0),(247,'Given:\npublic class Test3 {\n    public static void main(String[] args) {\n        String names[] = new String[3];\n        names[0] = \"Mary Brown\";\n        names[1] = \"Nancy Red\";\n        names[2] = \"Jessy Orange\";\n        try {\n            for(String n: names){\n                try {\n                    String pwd = n.substring(0, 3)+n.substring(6, 10);\n                    System.out.println(pwd);                    \n                }\n                catch(StringIndexOutOfBoundsException sie){\n                    System.out.println(\"string out of limits\");\n                }\n            }\n        }\n        catch(ArrayIndexOutOfBoundsException e){\n            System.out.println(\"array out of limits\");\n        }\n    }\n}\n\nWhat is the result?\n',0),(248,'Given: \n\npublic class TestTry {\n	public static void main(String[] args) {\n		StringBuilder message = new StringBuilder(\"hello java!\");\n		int pos = 0;\n		try {\n			for ( pos = 0; pos <12; pos++) {\n				switch(message.charAt(pos)) {\n				case \'a\': \n				case \'b\': \n				case \'c\':\n					String uc=Character.toString(message.charAt(pos)).toUpperCase();\n					message.replace(pos, pos+1, uc);\n				}\n			}\n		}catch (Exception e) {\n			System.out.println(\"Out of limits\"); \n		}\n		System.out.println(message);\n	}\n} ',0),(249,'Given:\n\nclass Base {\n    // insert code here\n}\npublic class Derived extends Base {\n    public static void main(String[] args) {\n        Derived obj = new Derived();\n        obj.setNum(3);\n        System.out.println(\"Square = \" + obj.getNum() * obj.getNum());\n    }\n}\n\nWhich two options, when inserted independently inside class Base, ensure that the class is being properly\nencapsulated and allow the program to execute and print the square of the number?',0),(250,'Which two are valid abstract classes?\n',0),(251,'public class MainMethod {\n   void main() {\n      System.out.println(\"one\");\n   }\n   static void main(String args) {\n      System.out.println(\"two\");\n   }\n   public static void main(String[] args) {\n      System.out.println(\"three\");\n   }\n   void mina(Object[ ] args) {\n      System.out.println(\"four\");\n   }\n}\n\nWhat is the result?',0),(252,'Given:\n\nimport java.util.*;\npublic class Ref {\n    public static void main(String[] args) {\n        StringBuilder s1 = new StringBuilder();\n        String s2 = s1.toString();\n        List<String> lst = new ArrayList<String>();\n        lst.add(s2);\n        System.out.println(s1.getClass());\n        System.out.println(s2.getClass());\n        System.out.println(lst.getClass());\n    }\n}\n\nWhat is the result?',0),(253,'Given the code fragment:\npublic class Test {\n     public static void main(String[] args) {\n           boolean isChecked = false;\n           int arry[] = {1, 3, 5, 7, 8, 9};\n           int index = arry.length;\n           while (<code1>) {\n               if (arry[index-1] % 2 == 0) {\n                  isChecked = true;\n              }\n              <code2>\n          }\n          System.out.print(arry[index] + \", \" + isChecked);\n    }\n }\n\nWhich two changes enable the code to print 1, true?\n',0),(254,'Given the for loop construct: \n\nfor ( expr1; expr2; expr3 ) {\n	statement;\n} ',0),(255,'Given the code fragment: \n\npublic class Test2 {\n	int fvar;\n	static int cvar;\npublic static void main(String[] args) {\n	Test2 t = new Test2();	\n	// insert code here to write field variables \n	}\n} \n',0),(256,'Given:\npublic class MyFor {\n   public static void main(String[] args) {\n      for (int ii = 0; ii < 4; ii++) {\n         System.out.println(\"ii = \" + ii);\n         ii = ii + 1;\n      }\n   }\n}\nWhat is the result?\n',0),(257,'Given:\n\nclass Mid\n {\n    public int findMid(int n1, int n2) {\n        return (n1 + n2) / 2;\n    }\n}\npublic class Calc extends Mid {\n    public static void main(String[] args) {\n        int n1 = 22, n2 = 2;\n        // insert code here\n        System.out.print(n3);\n    }\n}\n\nWhich two code fragments, when inserted at // insert code here, enable the code to compile and print 12?',0),(258,'Given:\npublic class ScopeTest {\n   int j, int k;\n   public static void main(String[] args) {\n      new ScopeTest().doStuff();}\n   void doStuff() {\n      int x = 5;\n      doStuff2();\n      System.out.println(\"x\");\n   }\n   void doStuff2() {\n      int y = 7;\n      System.out.println(\"y\");\n      for(int z = 0; z < 5; z++) {\n         System.out.println(\"z\");\n         System.out.println(\"y\");\n      } \n   }\n}\n\nWhich two items are fields?\n',0),(259,'public class X {\n\n   public static void main(String[ ] args){\n      String theString = \"Hello World\";\n      System.out.println(theString.charAt(11));\n   }\n}\nWhat is the result?',0),(260,'Given the code fragment:\n\nint  j= 0, k = 0;\n\nfor( int i=0; i < x; i++) {\n   do {\n      k = 0;\n      while ( k < z ) {\n         k++;\n         System.out.print(k + \" \");\n      }\n      System.out.println(\" \");\n      j++;\n   } while ( j < y );\n   System.out.println(\"---\");\n}\n\nWhat values of x, y, z will produce the following result?\n1 2 3 4\n1 2 3 4\n1 2 3 4\n---\n1 2 3 4\n---',0),(261,'Which two are valid declarations of a two-dimensional array?\n',0),(262,'Given: \n\npublic class TestTry {\n	public static void main(String[] args) {\n		StringBuilder message = new StringBuilder(\"hello java!\");\n		int pos = 0;\n		try {\n			for ( pos = 0; pos <12; pos++) {\n				switch(message.charAt(pos)) {\n				case \'a\': \n				case \'e\': \n				case \'o\':\n					String uc=Character.toString(message.charAt(pos)).toUpperCase();\n					message.replace(pos, pos+1, uc);\n				}\n			}\n		}catch (Exception e) {\n			System.out.println(\"Out of limits\"); \n		}\n		System.out.println(message);\n	}\n} ',0),(263,'Given:\npublic class MyFor {\n   public static void main(String[] args) {\n      for (int ii = 0; ii < 4; ii++) {\n         System.out.println(\"ii = \" + ii);\n         ii = ii + 1;\n      }\n   }\n}\nWhat is the result?\n',0),(264,'Identify tow benefits of using ArrayList over array in software development.',0),(265,'Given the fragment: \n\nString[][] arra = new String[3][];\narra[0] = new String[]{\"rose\", \"lily\"};\narra[1] = new String[]{\"apple\", \"cherry\", \"grapes\"};\narra[2] = new String[]{\"beans\", \"carrot\", \"potato\"};\n// insert code here \n\nWhich code fragment, when inserted at line // insert code here, enables the code to \nsuccessfully change arra elements to uppercase?',0),(266,'Given: \n\npackage pkg1;\n class Bb {}\n public class Ee {\n    private Ee() {}\n }\n\npackage pkg2;\nfinal class Ww { }\n\npackage pkg3;\npublic abstract class Dd {\n    void m() {}\n } \n\n1 package pkg4;\n2 import pkg1.*; \n3 import pkg2.*; \n4 import pkg3.*; \n5 // insert a class definition here \n\nWhich two definitions when inserted independently at line 5, enable the code to compile? ',0),(267,'Given:\n\npublic class DoCompare4 {\n   public static void main(String[] args){\n      String[ ] table = {\"aa\", \"bb\", \"cc\"};\n      int ii = 0;\n      do\n         while (ii < table.length)\n            System.out.println(ii++);\n      while (ii < table.length);\n   }\n}\n\nWhat is the result?',0),(268,'Given: \n\nclass A{ }\nclass B { } \ninterface X { }\ninterface Y { } \n\nWhich two classes are valid?',0),(269,'Given: \n\nclass X {\n    private X() { }\n    void one() { }\n} \npublic class Y extends X{\n    private Y() { }\n    public static void main(String[] args) {\n        new Y().one();\n    } \n} \n\nWhich change will make this code compile?',0),(270,'Given: \n\npublic class SuperTest {\n    public static void main(String[] args) {\n        // statement 1\n        // statement 2\n        // statement 3\n    }\n}\nclass Shape {\n    public Shape() {\n        System.out.println(\"Shape: constructor\");\n    }\n    public void foo() {\n        System.out.println(\"Shape: foo\");\n    }\n}\nclass Square extends Shape {\n    public Square() {\n        super();\n    }\n    public Square(String label) {\n        System.out.println(\"Square: constructor\");\n    }\n    public void foo() {\n        super.foo();\n    }\n    public void foo(String label) {\n        System.out.println(\"Square: foo\");\n    }\n}\n\nWhat should statement1, statement2 and statement3 be respectively, in order to produce the result?\n\nShape: constructor\nSquare: foo\nShape: foo\n\n',0),(271,'Given code fragment:\n\ninterface SampleCloseable {\n    public void close() throws java.io.IOException;    \n}\n\nWhich three implementations are valid?\n\n',0),(272,'Which two statements correctly describe checked exception?',0),(273,'Given:\n\nabstract class X {\n    public abstract void methodX();\n}\ninterface Y{\n    public void methodY();\n}\n\nWhich two code fragments are valid?',0),(274,'class X {\n   X() { }\n   private void one() { }\n}\npublic class Y extends X {\n   Y() { }\n   private void two() { one(); }\n   public static void main(String[] args){\n      new Y().two();\n   }\n}\n\nWhat changes will make this code to compile?',0),(275,'package handy.dandy;\n\npublic class Keystroke {\n    public void typeExclamation(){\n        System.out.println(\"!\");\n    }\n}\n01. package handy;\n02. public class Greet {\n03.     public static void main(String[] args) {        \n04.         String greeting = \"Hello\";\n05.         System.out.println(greeting);\n06.         Keystroke stroke = new Keystroke();\n07.         stroke.typeExclamation();\n08.     }\n09. }\n\nWhat three modifications, made independently, made to class Greet, enable the code to compile and run?',0),(276,'01. class StaticMethods {\n02.     static void one() {\n03.         two();\n04.         StaticMethods.two();\n05.         three();\n06.         StaticMethods.four();\n07.     }\n08.     static void tow() {}\n09.     void three() {\n10.         one();\n11.         StaticMethods.two();\n12.         four();\n13.         StaticMethods.four();\n14.     }\n15.     void four() {}\n16. }\n\nWhich three are illegal?',0),(277,'Which statement initializes a StringBuilder to a capacity of 128?',0),(278,'Given the code fragment:\n\npublic class Test {\n    public static List data = new ArrayList();\n\n    // insert Code here\n    {\n        for (String x : strs) {\n            data.add(x);\n        }\n        return data;\n    }\n    public static void main(String[] args) {\n        String[] d = {\"a\", \"b\", \"c\"};\n        update(d);\n        for (String s : d) {\n            System.out.print(s + \" \");\n        }\n    }\n}\n\nWhich code fragment, when inserted at\n// insert Code here,\nenables the code to compile and print a b c?',0),(279,'Given:\n\npublic class CharToStr {\n    public static void main(String[] args) {\n        String str1 = \"Java\";\n        char str2[] = {\'J\', \'a\', \'v\', \'a\'};\n        String str3 = null;\n        for (char c : str2) {\n            str3 = str3 + c;\n        }\n        if (str1.equals(str3))\n            System.out.println(\"Successful\");\n        else\n            System.out.println(\"Unsuccessful\");\n    }\n}\n\nWhat is the result?',0),(280,'int i, j = 0;\ni = (3 * 2 + 4 + 5);\nj = (3 * (2 + 4) + 5);\nSystem.out.println(\"i: \" + i + \"\\nj: \" + j);\nWhat is the result?\n\n\n\n\n',0),(281,'Given: \n\npublic class FieldInit {\n  char c;\n  boolean b;\n  float f;\n  void printAll() {\n    System.out.println(\"c = \" + c);\n    System.out.println(\"b = \" + b);\n    System.out.println(\"f = \" + f);\n  }\n  public static void main(String[] args) {\n    FieldInit f = new FieldInit();\n    f.printAll();\n  }\n} \n\nWhat is the result?',0),(282,'Given: \n\npublic class X {\n  static int i;\n  int j;\n  public static void main(String[] args) {\n    X x1 = new X();\n    X x2 = new X();\n    x1.i = 3;\n    x1.j = 4;\n    x2.i = 5;\n    x2.j = 6;\n    System.out.println(\n      x1.i+ \" \" +\n      x1.j + \" \" +\n      x2.i+ \" \" +\n      x2.j);\n  }\n} \n\nWhat is the result?',0),(283,'Given: \n\npackage p1;\npublic class Test {\n  static double dvalue;\n  static Test ref;\n  public static void main(String[] args) {\n    System.out.println(ref);\n    System.out.println(dvalue);\n  }\n} \n\nWhat is the result?',0),(284,'Given: \n\npublic class Test {\n  static boolean bVar;\n  public static void main(String[] args) {\n    boolean bVar1 = true;\n    int count = 8;\n    do {\n      System.out.println(\"Hello Java! \" + count);\n      if (count >= 7) {\n	bVar1 = false;\n      }\n    } while (bVar != bVar1 && count > 4); \n    count -= 2;\n  }\n} \n\nWhat is the result? ',0),(285,'Given: \n\npublic class Natural {\n  private int i;\n  void disp() {\n    while (i <= 5) {\n      for (int i = 1; i <=5;) {\n	System.out.print(i + \" \");\n	i++;\n      }\n      i++;\n    }\n  }\n  public static void main(String[] args) {\n    new Natural().disp();\n  }\n} \n\nWhat is the result?',0),(286,'Given:\n\npublic class Circle {\n    double radius;\n    public double area;\n    public Circle(double r) { radius = r; }\n    public double getRadius() { return radius; }\n    public void setRadius(double r) { radius = r; }\n    public double getArea() { return /* ??? */;\n }\n}\n\nclass App {\n    public static void main(String[] args) {\n        Circle c1 = new Circle(17.4);\n        c1.area = Math.PI * c1.getRadius() * c1.getRadius();\n    }\n}\n\nThe class is poorly encapsulated. You need to change the circle class to compute and return the area\ninstead.\n\nWhich two modifications are necessary to ensure that the class is being properly encapsulated?',0),(287,'Given:\n\n01  import java.lang.Error;\n02  class TestApp {\n03     public static void main(String[] args) {\n04         TestApp t = new TestApp();\n05         try {\n06             t.doPrint();\n07             t.doList();\n08         } catch (Exception e2) {\n09             System.out.println(\"Caught \" + e2);\n10         }\n11     }\n12     public void doList() throws Exception {\n13         throw new Error(\"Error\");\n14     }\n15     public void doPrint() throws Exception {\n16         throw new RuntimeException(\"Exception\");\n17     }\n18 }',0),(288,'Given: \n\npackage p1;\npublic interface DoInterface {\n	void method1(int n1); 	// line n1 \n}\npackage p3;\nimport p1.DoInterface;\npublic class DoClass implements DoInterface{\n	public DoClass(int p1) { }\n	public void method1 (int p1) { } // line n2 \n	private void method2 (int p1) { } // line n3 \n}\npublic class Test {\n	public static void main(String[] args) {\n		DoInterface doi= new DoClass(100); // line n4 \n		doi.method1(100);\n		doi.method2(200);\n	}\n} \n\nWhich two changes will enable the code to compile?',0),(289,'Given code fragment:\n\nString h1 = \"Bob\";\n\nString h2 = new String(\"Bob\");\n\nWhat is the best way to test that the values of h1 and h2 are the same?',0),(290,'Given the code fragment: \n\npublic class Test {\n  public static void main(String[] args) {\n    for (int ii= 0; ii< 3; ii++) {\n      int count = 0;\n      for (int jj = 3; jj >0; jj--) {\n	if (ii== jj) {\n	  ++count;\n	  break;\n	}\n      }\n      System.out.print(count);\n      continue;\n    }\n  }\n} \n\nWhat is the result?',0),(291,'Given the code fragment: \n\npublic class ForTest {\n  public static void main(String[] args) {\n    int[] array = {1, 2, 3};\n    for(foo) { \n    }\n  }\n} \n\nWhich three code fragments, when replaced individually for foo, \nenables the program to compile?',0),(292,'Given:\n\nclass X{\n   String str = \"default\";\n   X(String s){ str = s; }\n   void print(){ System.out.println(str); }\n   public static void main(String[] args){\n      new X(\"hello\").print();\n   }\n}\nWhat is the result?',0),(293,'Given the for loop construct: \n\nfor ( expr1; expr2; expr3 ) {\n	statement;\n} ',0),(294,'Given the code fragment: \n\npublic class Test2 {\n	int fvar;\n	static int cvar;\npublic static void main(String[] args) {\n	Test2 t = new Test2();	\n	// insert code here to write field variables \n	}\n} \n',0);
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `session`
--

DROP TABLE IF EXISTS `session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `session` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `begin` datetime DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `session_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `session`
--

LOCK TABLES `session` WRITE;
/*!40000 ALTER TABLE `session` DISABLE KEYS */;
INSERT INTO `session` VALUES (2,'2016-12-14 13:02:51',1),(3,'2017-01-09 10:36:55',3),(4,'2017-01-09 10:38:56',3),(5,'2017-01-09 10:42:45',3),(6,'2017-01-09 10:43:24',3),(7,'2017-01-09 10:46:17',3),(8,'2017-01-09 11:01:34',3),(9,'2017-01-09 11:10:56',3),(11,'2017-01-09 11:11:57',3),(12,'2017-01-09 11:22:43',3),(13,'2017-01-09 11:59:17',3),(14,'2017-01-09 12:06:56',3),(15,'2017-01-09 12:24:13',3),(16,'2017-01-10 09:20:27',3),(17,'2017-01-10 11:07:17',3),(18,'2017-01-10 11:56:17',3),(19,'2017-01-10 11:58:45',1),(20,'2017-01-10 12:05:00',3),(21,'2017-01-10 15:10:47',3),(22,'2017-01-11 10:15:09',1),(23,'2017-01-12 08:38:10',3),(24,'2017-01-13 12:01:34',3);
/*!40000 ALTER TABLE `session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `session2question`
--

DROP TABLE IF EXISTS `session2question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `session2question` (
  `session_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  KEY `session_id` (`session_id`),
  KEY `question_id` (`question_id`),
  CONSTRAINT `session2question_ibfk_1` FOREIGN KEY (`session_id`) REFERENCES `session` (`id`),
  CONSTRAINT `session2question_ibfk_2` FOREIGN KEY (`question_id`) REFERENCES `question` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `session2question`
--

LOCK TABLES `session2question` WRITE;
/*!40000 ALTER TABLE `session2question` DISABLE KEYS */;
INSERT INTO `session2question` VALUES (3,3),(16,5),(16,6),(16,7),(16,10),(16,14),(17,5),(17,6),(17,7),(17,10),(17,14),(17,16),(17,27),(17,28),(17,29),(17,31),(17,5),(17,6),(17,7),(17,10),(17,14),(17,16),(17,27),(17,28),(17,29),(17,31),(18,5),(18,6),(19,9),(19,19),(20,4),(20,11),(20,12);
/*!40000 ALTER TABLE `session2question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `session2useranswer`
--

DROP TABLE IF EXISTS `session2useranswer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `session2useranswer` (
  `session_id` int(11) DEFAULT NULL,
  `userAnswer_id` int(11) DEFAULT NULL,
  KEY `session_id` (`session_id`),
  KEY `userAnswer_id` (`userAnswer_id`),
  CONSTRAINT `session2useranswer_ibfk_1` FOREIGN KEY (`session_id`) REFERENCES `session` (`id`),
  CONSTRAINT `session2useranswer_ibfk_2` FOREIGN KEY (`userAnswer_id`) REFERENCES `answer` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `session2useranswer`
--

LOCK TABLES `session2useranswer` WRITE;
/*!40000 ALTER TABLE `session2useranswer` DISABLE KEYS */;
INSERT INTO `session2useranswer` VALUES (3,3),(16,965),(16,23),(16,24),(17,4),(17,17),(17,4),(17,17),(18,965),(18,25),(19,12),(20,385),(20,19),(20,189),(20,190);
/*!40000 ALTER TABLE `session2useranswer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `test`
--

DROP TABLE IF EXISTS `test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `test`
--

LOCK TABLES `test` WRITE;
/*!40000 ALTER TABLE `test` DISABLE KEYS */;
INSERT INTO `test` VALUES (1,'Yepp'),(2,'Test 1 3'),(3,'1');
/*!40000 ALTER TABLE `test` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) DEFAULT NULL,
  `password` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'test','pwd'),(2,NULL,NULL),(3,'rolf','rolf'),(4,'flo','flo');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary view structure for view `v_all_given_answer`
--

DROP TABLE IF EXISTS `v_all_given_answer`;
/*!50001 DROP VIEW IF EXISTS `v_all_given_answer`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_all_given_answer` AS SELECT 
 1 AS `useranswer_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_all_needed_answer`
--

DROP TABLE IF EXISTS `v_all_needed_answer`;
/*!50001 DROP VIEW IF EXISTS `v_all_needed_answer`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_all_needed_answer` AS SELECT 
 1 AS `id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_all_question`
--

DROP TABLE IF EXISTS `v_all_question`;
/*!50001 DROP VIEW IF EXISTS `v_all_question`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_all_question` AS SELECT 
 1 AS `question_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_question_from_again`
--

DROP TABLE IF EXISTS `v_question_from_again`;
/*!50001 DROP VIEW IF EXISTS `v_question_from_again`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_question_from_again` AS SELECT 
 1 AS `question_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_question_from_session2question`
--

DROP TABLE IF EXISTS `v_question_from_session2question`;
/*!50001 DROP VIEW IF EXISTS `v_question_from_session2question`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_question_from_session2question` AS SELECT 
 1 AS `question_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_session_user`
--

DROP TABLE IF EXISTS `v_session_user`;
/*!50001 DROP VIEW IF EXISTS `v_session_user`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_session_user` AS SELECT 
 1 AS `id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_wrong_answer`
--

DROP TABLE IF EXISTS `v_wrong_answer`;
/*!50001 DROP VIEW IF EXISTS `v_wrong_answer`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_wrong_answer` AS SELECT 
 1 AS `id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_wrong_question`
--

DROP TABLE IF EXISTS `v_wrong_question`;
/*!50001 DROP VIEW IF EXISTS `v_wrong_question`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_wrong_question` AS SELECT 
 1 AS `question_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Final view structure for view `v_all_given_answer`
--

/*!50001 DROP VIEW IF EXISTS `v_all_given_answer`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_all_given_answer` AS select distinct `session2useranswer`.`userAnswer_id` AS `useranswer_id` from `session2useranswer` where `session2useranswer`.`session_id` in (select `v_session_user`.`id` from `v_session_user`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_all_needed_answer`
--

/*!50001 DROP VIEW IF EXISTS `v_all_needed_answer`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_all_needed_answer` AS select `answer`.`id` AS `id` from `answer` where (`answer`.`question_id` in (select `v_question_from_session2question`.`question_id` from `v_question_from_session2question`) and (`answer`.`isRight` = 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_all_question`
--

/*!50001 DROP VIEW IF EXISTS `v_all_question`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_all_question` AS (select `v_question_from_again`.`question_id` AS `question_id` from `v_question_from_again`) union (select `v_question_from_session2question`.`question_id` AS `question_id` from `v_question_from_session2question`) union (select `v_wrong_question`.`question_id` AS `question_id` from `v_wrong_question`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_question_from_again`
--

/*!50001 DROP VIEW IF EXISTS `v_question_from_again`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_question_from_again` AS select distinct `again`.`question_id` AS `question_id` from `again` where `again`.`session_id` in (select `v_session_user`.`id` from `v_session_user`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_question_from_session2question`
--

/*!50001 DROP VIEW IF EXISTS `v_question_from_session2question`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_question_from_session2question` AS select distinct `session2question`.`question_id` AS `question_id` from `session2question` where `session2question`.`session_id` in (select `v_session_user`.`id` from `v_session_user`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_session_user`
--

/*!50001 DROP VIEW IF EXISTS `v_session_user`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_session_user` AS select `session`.`id` AS `id` from `session` where (`session`.`user_id` = 3) order by `session`.`id` desc limit 2 */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_wrong_answer`
--

/*!50001 DROP VIEW IF EXISTS `v_wrong_answer`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_wrong_answer` AS (select `v_all_given_answer`.`useranswer_id` AS `id` from `v_all_given_answer` where (not(`v_all_given_answer`.`useranswer_id` in (select `v_all_needed_answer`.`id` from `v_all_needed_answer`)))) union all (select `v_all_needed_answer`.`id` AS `id` from `v_all_needed_answer` where (not(`v_all_needed_answer`.`id` in (select `v_all_given_answer`.`useranswer_id` from `v_all_given_answer`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_wrong_question`
--

/*!50001 DROP VIEW IF EXISTS `v_wrong_question`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_wrong_question` AS select distinct `a`.`question_id` AS `question_id` from (`answer` `a` join `v_wrong_answer` `v_a` on((`a`.`id` = `v_a`.`id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-01-17 15:11:39
